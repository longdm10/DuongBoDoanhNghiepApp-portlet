/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dtt.duongbien.dao.vrcb.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import vn.dtt.duongbien.dao.vrcb.model.Modify;
import vn.dtt.duongbien.dao.vrcb.model.ModifyModel;
import vn.dtt.duongbien.dao.vrcb.model.ModifySoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Modify service. Represents a row in the &quot;gt_modify&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link vn.dtt.duongbien.dao.vrcb.model.ModifyModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ModifyImpl}.
 * </p>
 *
 * @author longdm
 * @see ModifyImpl
 * @see vn.dtt.duongbien.dao.vrcb.model.Modify
 * @see vn.dtt.duongbien.dao.vrcb.model.ModifyModel
 * @generated
 */
@JSON(strict = true)
public class ModifyModelImpl extends BaseModelImpl<Modify>
	implements ModifyModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a modify model instance should use the {@link vn.dtt.duongbien.dao.vrcb.model.Modify} interface instead.
	 */
	public static final String TABLE_NAME = "gt_modify";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ID", Types.BIGINT },
			{ "modifycode", Types.VARCHAR },
			{ "modifydesc", Types.VARCHAR },
			{ "organization", Types.VARCHAR },
			{ "division", Types.VARCHAR },
			{ "name", Types.VARCHAR },
			{ "modifydate", Types.TIMESTAMP },
			{ "documentname", Types.BIGINT },
			{ "documentyear", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table gt_modify (ID LONG not null primary key,modifycode VARCHAR(75) null,modifydesc VARCHAR(75) null,organization VARCHAR(75) null,division VARCHAR(75) null,name VARCHAR(75) null,modifydate DATE null,documentname LONG,documentyear LONG)";
	public static final String TABLE_SQL_DROP = "drop table gt_modify";
	public static final String ORDER_BY_JPQL = " ORDER BY modify.id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY gt_modify.ID ASC";
	public static final String DATA_SOURCE = "vaoracangbienDataSource";
	public static final String SESSION_FACTORY = "ravaocangbienSessionFactory";
	public static final String TX_MANAGER = "ravaocangbienTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.dtt.duongbien.dao.vrcb.model.Modify"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.dtt.duongbien.dao.vrcb.model.Modify"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Modify toModel(ModifySoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Modify model = new ModifyImpl();

		model.setId(soapModel.getId());
		model.setModifyCode(soapModel.getModifyCode());
		model.setModifyDesc(soapModel.getModifyDesc());
		model.setOrganization(soapModel.getOrganization());
		model.setDivision(soapModel.getDivision());
		model.setName(soapModel.getName());
		model.setModifyDate(soapModel.getModifyDate());
		model.setDocumentName(soapModel.getDocumentName());
		model.setDocumentYear(soapModel.getDocumentYear());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Modify> toModels(ModifySoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Modify> models = new ArrayList<Modify>(soapModels.length);

		for (ModifySoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.vn.dtt.duongbien.dao.vrcb.model.Modify"));

	public ModifyModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Modify.class;
	}

	@Override
	public String getModelClassName() {
		return Modify.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("modifyCode", getModifyCode());
		attributes.put("modifyDesc", getModifyDesc());
		attributes.put("organization", getOrganization());
		attributes.put("division", getDivision());
		attributes.put("name", getName());
		attributes.put("modifyDate", getModifyDate());
		attributes.put("documentName", getDocumentName());
		attributes.put("documentYear", getDocumentYear());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		String modifyCode = (String)attributes.get("modifyCode");

		if (modifyCode != null) {
			setModifyCode(modifyCode);
		}

		String modifyDesc = (String)attributes.get("modifyDesc");

		if (modifyDesc != null) {
			setModifyDesc(modifyDesc);
		}

		String organization = (String)attributes.get("organization");

		if (organization != null) {
			setOrganization(organization);
		}

		String division = (String)attributes.get("division");

		if (division != null) {
			setDivision(division);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		Date modifyDate = (Date)attributes.get("modifyDate");

		if (modifyDate != null) {
			setModifyDate(modifyDate);
		}

		Long documentName = (Long)attributes.get("documentName");

		if (documentName != null) {
			setDocumentName(documentName);
		}

		Long documentYear = (Long)attributes.get("documentYear");

		if (documentYear != null) {
			setDocumentYear(documentYear);
		}
	}

	@JSON
	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_id = id;
	}

	@JSON
	@Override
	public String getModifyCode() {
		if (_modifyCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _modifyCode;
		}
	}

	@Override
	public void setModifyCode(String modifyCode) {
		_modifyCode = modifyCode;
	}

	@JSON
	@Override
	public String getModifyDesc() {
		if (_modifyDesc == null) {
			return StringPool.BLANK;
		}
		else {
			return _modifyDesc;
		}
	}

	@Override
	public void setModifyDesc(String modifyDesc) {
		_modifyDesc = modifyDesc;
	}

	@JSON
	@Override
	public String getOrganization() {
		if (_organization == null) {
			return StringPool.BLANK;
		}
		else {
			return _organization;
		}
	}

	@Override
	public void setOrganization(String organization) {
		_organization = organization;
	}

	@JSON
	@Override
	public String getDivision() {
		if (_division == null) {
			return StringPool.BLANK;
		}
		else {
			return _division;
		}
	}

	@Override
	public void setDivision(String division) {
		_division = division;
	}

	@JSON
	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	@JSON
	@Override
	public Date getModifyDate() {
		return _modifyDate;
	}

	@Override
	public void setModifyDate(Date modifyDate) {
		_modifyDate = modifyDate;
	}

	@JSON
	@Override
	public long getDocumentName() {
		return _documentName;
	}

	@Override
	public void setDocumentName(long documentName) {
		_documentName = documentName;
	}

	@JSON
	@Override
	public long getDocumentYear() {
		return _documentYear;
	}

	@Override
	public void setDocumentYear(long documentYear) {
		_documentYear = documentYear;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Modify.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Modify toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Modify)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ModifyImpl modifyImpl = new ModifyImpl();

		modifyImpl.setId(getId());
		modifyImpl.setModifyCode(getModifyCode());
		modifyImpl.setModifyDesc(getModifyDesc());
		modifyImpl.setOrganization(getOrganization());
		modifyImpl.setDivision(getDivision());
		modifyImpl.setName(getName());
		modifyImpl.setModifyDate(getModifyDate());
		modifyImpl.setDocumentName(getDocumentName());
		modifyImpl.setDocumentYear(getDocumentYear());

		modifyImpl.resetOriginalValues();

		return modifyImpl;
	}

	@Override
	public int compareTo(Modify modify) {
		int value = 0;

		if (getId() < modify.getId()) {
			value = -1;
		}
		else if (getId() > modify.getId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Modify)) {
			return false;
		}

		Modify modify = (Modify)obj;

		long primaryKey = modify.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<Modify> toCacheModel() {
		ModifyCacheModel modifyCacheModel = new ModifyCacheModel();

		modifyCacheModel.id = getId();

		modifyCacheModel.modifyCode = getModifyCode();

		String modifyCode = modifyCacheModel.modifyCode;

		if ((modifyCode != null) && (modifyCode.length() == 0)) {
			modifyCacheModel.modifyCode = null;
		}

		modifyCacheModel.modifyDesc = getModifyDesc();

		String modifyDesc = modifyCacheModel.modifyDesc;

		if ((modifyDesc != null) && (modifyDesc.length() == 0)) {
			modifyCacheModel.modifyDesc = null;
		}

		modifyCacheModel.organization = getOrganization();

		String organization = modifyCacheModel.organization;

		if ((organization != null) && (organization.length() == 0)) {
			modifyCacheModel.organization = null;
		}

		modifyCacheModel.division = getDivision();

		String division = modifyCacheModel.division;

		if ((division != null) && (division.length() == 0)) {
			modifyCacheModel.division = null;
		}

		modifyCacheModel.name = getName();

		String name = modifyCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			modifyCacheModel.name = null;
		}

		Date modifyDate = getModifyDate();

		if (modifyDate != null) {
			modifyCacheModel.modifyDate = modifyDate.getTime();
		}
		else {
			modifyCacheModel.modifyDate = Long.MIN_VALUE;
		}

		modifyCacheModel.documentName = getDocumentName();

		modifyCacheModel.documentYear = getDocumentYear();

		return modifyCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(19);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", modifyCode=");
		sb.append(getModifyCode());
		sb.append(", modifyDesc=");
		sb.append(getModifyDesc());
		sb.append(", organization=");
		sb.append(getOrganization());
		sb.append(", division=");
		sb.append(getDivision());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", modifyDate=");
		sb.append(getModifyDate());
		sb.append(", documentName=");
		sb.append(getDocumentName());
		sb.append(", documentYear=");
		sb.append(getDocumentYear());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(31);

		sb.append("<model><model-name>");
		sb.append("vn.dtt.duongbien.dao.vrcb.model.Modify");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifyCode</column-name><column-value><![CDATA[");
		sb.append(getModifyCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifyDesc</column-name><column-value><![CDATA[");
		sb.append(getModifyDesc());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>organization</column-name><column-value><![CDATA[");
		sb.append(getOrganization());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>division</column-name><column-value><![CDATA[");
		sb.append(getDivision());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifyDate</column-name><column-value><![CDATA[");
		sb.append(getModifyDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>documentName</column-name><column-value><![CDATA[");
		sb.append(getDocumentName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>documentYear</column-name><column-value><![CDATA[");
		sb.append(getDocumentYear());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Modify.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] { Modify.class };
	private long _id;
	private String _modifyCode;
	private String _modifyDesc;
	private String _organization;
	private String _division;
	private String _name;
	private Date _modifyDate;
	private long _documentName;
	private long _documentYear;
	private Modify _escapedModel;
}