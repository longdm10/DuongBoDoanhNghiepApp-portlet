/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dtt.duongbien.dao.vrcb.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import vn.dtt.duongbien.dao.vrcb.model.DmGtOrganization;
import vn.dtt.duongbien.dao.vrcb.model.DmGtOrganizationModel;
import vn.dtt.duongbien.dao.vrcb.model.DmGtOrganizationSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the DmGtOrganization service. Represents a row in the &quot;DM_GT_ORGANIZATION&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link vn.dtt.duongbien.dao.vrcb.model.DmGtOrganizationModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DmGtOrganizationImpl}.
 * </p>
 *
 * @author longdm
 * @see DmGtOrganizationImpl
 * @see vn.dtt.duongbien.dao.vrcb.model.DmGtOrganization
 * @see vn.dtt.duongbien.dao.vrcb.model.DmGtOrganizationModel
 * @generated
 */
@JSON(strict = true)
public class DmGtOrganizationModelImpl extends BaseModelImpl<DmGtOrganization>
	implements DmGtOrganizationModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a dm gt organization model instance should use the {@link vn.dtt.duongbien.dao.vrcb.model.DmGtOrganization} interface instead.
	 */
	public static final String TABLE_NAME = "DM_GT_ORGANIZATION";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ID", Types.BIGINT },
			{ "OrganizationCode", Types.VARCHAR },
			{ "OrganizationName", Types.VARCHAR },
			{ "OrganizationNameVN", Types.VARCHAR },
			{ "OrganizationOrder", Types.INTEGER },
			{ "IsDelete", Types.INTEGER },
			{ "MarkedAsDelete", Types.INTEGER },
			{ "ModifiedDate", Types.TIMESTAMP },
			{ "RequestedDate", Types.TIMESTAMP },
			{ "SyncVersion", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table DM_GT_ORGANIZATION (ID LONG not null primary key,OrganizationCode VARCHAR(75) null,OrganizationName VARCHAR(75) null,OrganizationNameVN VARCHAR(75) null,OrganizationOrder INTEGER,IsDelete INTEGER,MarkedAsDelete INTEGER,ModifiedDate DATE null,RequestedDate DATE null,SyncVersion VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table DM_GT_ORGANIZATION";
	public static final String ORDER_BY_JPQL = " ORDER BY dmGtOrganization.id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY DM_GT_ORGANIZATION.ID ASC";
	public static final String DATA_SOURCE = "vaoracangbienDataSource";
	public static final String SESSION_FACTORY = "ravaocangbienSessionFactory";
	public static final String TX_MANAGER = "ravaocangbienTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.dtt.duongbien.dao.vrcb.model.DmGtOrganization"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.dtt.duongbien.dao.vrcb.model.DmGtOrganization"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.vn.dtt.duongbien.dao.vrcb.model.DmGtOrganization"),
			true);
	public static long ORGANIZATIONCODE_COLUMN_BITMASK = 1L;
	public static long ID_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static DmGtOrganization toModel(DmGtOrganizationSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		DmGtOrganization model = new DmGtOrganizationImpl();

		model.setId(soapModel.getId());
		model.setOrganizationCode(soapModel.getOrganizationCode());
		model.setOrganizationName(soapModel.getOrganizationName());
		model.setOrganizationNameVN(soapModel.getOrganizationNameVN());
		model.setOrganizationorder(soapModel.getOrganizationorder());
		model.setIsDelete(soapModel.getIsDelete());
		model.setMarkedAsDelete(soapModel.getMarkedAsDelete());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setRequestedDate(soapModel.getRequestedDate());
		model.setSyncVersion(soapModel.getSyncVersion());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<DmGtOrganization> toModels(
		DmGtOrganizationSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<DmGtOrganization> models = new ArrayList<DmGtOrganization>(soapModels.length);

		for (DmGtOrganizationSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.vn.dtt.duongbien.dao.vrcb.model.DmGtOrganization"));

	public DmGtOrganizationModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return DmGtOrganization.class;
	}

	@Override
	public String getModelClassName() {
		return DmGtOrganization.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("organizationCode", getOrganizationCode());
		attributes.put("organizationName", getOrganizationName());
		attributes.put("organizationNameVN", getOrganizationNameVN());
		attributes.put("organizationorder", getOrganizationorder());
		attributes.put("isDelete", getIsDelete());
		attributes.put("markedAsDelete", getMarkedAsDelete());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("requestedDate", getRequestedDate());
		attributes.put("syncVersion", getSyncVersion());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		String organizationCode = (String)attributes.get("organizationCode");

		if (organizationCode != null) {
			setOrganizationCode(organizationCode);
		}

		String organizationName = (String)attributes.get("organizationName");

		if (organizationName != null) {
			setOrganizationName(organizationName);
		}

		String organizationNameVN = (String)attributes.get("organizationNameVN");

		if (organizationNameVN != null) {
			setOrganizationNameVN(organizationNameVN);
		}

		Integer organizationorder = (Integer)attributes.get("organizationorder");

		if (organizationorder != null) {
			setOrganizationorder(organizationorder);
		}

		Integer isDelete = (Integer)attributes.get("isDelete");

		if (isDelete != null) {
			setIsDelete(isDelete);
		}

		Integer markedAsDelete = (Integer)attributes.get("markedAsDelete");

		if (markedAsDelete != null) {
			setMarkedAsDelete(markedAsDelete);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Date requestedDate = (Date)attributes.get("requestedDate");

		if (requestedDate != null) {
			setRequestedDate(requestedDate);
		}

		String syncVersion = (String)attributes.get("syncVersion");

		if (syncVersion != null) {
			setSyncVersion(syncVersion);
		}
	}

	@JSON
	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_columnBitmask = -1L;

		_id = id;
	}

	@JSON
	@Override
	public String getOrganizationCode() {
		if (_organizationCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _organizationCode;
		}
	}

	@Override
	public void setOrganizationCode(String organizationCode) {
		_columnBitmask |= ORGANIZATIONCODE_COLUMN_BITMASK;

		if (_originalOrganizationCode == null) {
			_originalOrganizationCode = _organizationCode;
		}

		_organizationCode = organizationCode;
	}

	public String getOriginalOrganizationCode() {
		return GetterUtil.getString(_originalOrganizationCode);
	}

	@JSON
	@Override
	public String getOrganizationName() {
		if (_organizationName == null) {
			return StringPool.BLANK;
		}
		else {
			return _organizationName;
		}
	}

	@Override
	public void setOrganizationName(String organizationName) {
		_organizationName = organizationName;
	}

	@JSON
	@Override
	public String getOrganizationNameVN() {
		if (_organizationNameVN == null) {
			return StringPool.BLANK;
		}
		else {
			return _organizationNameVN;
		}
	}

	@Override
	public void setOrganizationNameVN(String organizationNameVN) {
		_organizationNameVN = organizationNameVN;
	}

	@JSON
	@Override
	public int getOrganizationorder() {
		return _organizationorder;
	}

	@Override
	public void setOrganizationorder(int organizationorder) {
		_organizationorder = organizationorder;
	}

	@JSON
	@Override
	public int getIsDelete() {
		return _isDelete;
	}

	@Override
	public void setIsDelete(int isDelete) {
		_isDelete = isDelete;
	}

	@JSON
	@Override
	public int getMarkedAsDelete() {
		return _markedAsDelete;
	}

	@Override
	public void setMarkedAsDelete(int markedAsDelete) {
		_markedAsDelete = markedAsDelete;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public Date getRequestedDate() {
		return _requestedDate;
	}

	@Override
	public void setRequestedDate(Date requestedDate) {
		_requestedDate = requestedDate;
	}

	@JSON
	@Override
	public String getSyncVersion() {
		if (_syncVersion == null) {
			return StringPool.BLANK;
		}
		else {
			return _syncVersion;
		}
	}

	@Override
	public void setSyncVersion(String syncVersion) {
		_syncVersion = syncVersion;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			DmGtOrganization.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public DmGtOrganization toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (DmGtOrganization)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		DmGtOrganizationImpl dmGtOrganizationImpl = new DmGtOrganizationImpl();

		dmGtOrganizationImpl.setId(getId());
		dmGtOrganizationImpl.setOrganizationCode(getOrganizationCode());
		dmGtOrganizationImpl.setOrganizationName(getOrganizationName());
		dmGtOrganizationImpl.setOrganizationNameVN(getOrganizationNameVN());
		dmGtOrganizationImpl.setOrganizationorder(getOrganizationorder());
		dmGtOrganizationImpl.setIsDelete(getIsDelete());
		dmGtOrganizationImpl.setMarkedAsDelete(getMarkedAsDelete());
		dmGtOrganizationImpl.setModifiedDate(getModifiedDate());
		dmGtOrganizationImpl.setRequestedDate(getRequestedDate());
		dmGtOrganizationImpl.setSyncVersion(getSyncVersion());

		dmGtOrganizationImpl.resetOriginalValues();

		return dmGtOrganizationImpl;
	}

	@Override
	public int compareTo(DmGtOrganization dmGtOrganization) {
		int value = 0;

		if (getId() < dmGtOrganization.getId()) {
			value = -1;
		}
		else if (getId() > dmGtOrganization.getId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof DmGtOrganization)) {
			return false;
		}

		DmGtOrganization dmGtOrganization = (DmGtOrganization)obj;

		long primaryKey = dmGtOrganization.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		DmGtOrganizationModelImpl dmGtOrganizationModelImpl = this;

		dmGtOrganizationModelImpl._originalOrganizationCode = dmGtOrganizationModelImpl._organizationCode;

		dmGtOrganizationModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<DmGtOrganization> toCacheModel() {
		DmGtOrganizationCacheModel dmGtOrganizationCacheModel = new DmGtOrganizationCacheModel();

		dmGtOrganizationCacheModel.id = getId();

		dmGtOrganizationCacheModel.organizationCode = getOrganizationCode();

		String organizationCode = dmGtOrganizationCacheModel.organizationCode;

		if ((organizationCode != null) && (organizationCode.length() == 0)) {
			dmGtOrganizationCacheModel.organizationCode = null;
		}

		dmGtOrganizationCacheModel.organizationName = getOrganizationName();

		String organizationName = dmGtOrganizationCacheModel.organizationName;

		if ((organizationName != null) && (organizationName.length() == 0)) {
			dmGtOrganizationCacheModel.organizationName = null;
		}

		dmGtOrganizationCacheModel.organizationNameVN = getOrganizationNameVN();

		String organizationNameVN = dmGtOrganizationCacheModel.organizationNameVN;

		if ((organizationNameVN != null) && (organizationNameVN.length() == 0)) {
			dmGtOrganizationCacheModel.organizationNameVN = null;
		}

		dmGtOrganizationCacheModel.organizationorder = getOrganizationorder();

		dmGtOrganizationCacheModel.isDelete = getIsDelete();

		dmGtOrganizationCacheModel.markedAsDelete = getMarkedAsDelete();

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			dmGtOrganizationCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			dmGtOrganizationCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		Date requestedDate = getRequestedDate();

		if (requestedDate != null) {
			dmGtOrganizationCacheModel.requestedDate = requestedDate.getTime();
		}
		else {
			dmGtOrganizationCacheModel.requestedDate = Long.MIN_VALUE;
		}

		dmGtOrganizationCacheModel.syncVersion = getSyncVersion();

		String syncVersion = dmGtOrganizationCacheModel.syncVersion;

		if ((syncVersion != null) && (syncVersion.length() == 0)) {
			dmGtOrganizationCacheModel.syncVersion = null;
		}

		return dmGtOrganizationCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(21);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", organizationCode=");
		sb.append(getOrganizationCode());
		sb.append(", organizationName=");
		sb.append(getOrganizationName());
		sb.append(", organizationNameVN=");
		sb.append(getOrganizationNameVN());
		sb.append(", organizationorder=");
		sb.append(getOrganizationorder());
		sb.append(", isDelete=");
		sb.append(getIsDelete());
		sb.append(", markedAsDelete=");
		sb.append(getMarkedAsDelete());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", requestedDate=");
		sb.append(getRequestedDate());
		sb.append(", syncVersion=");
		sb.append(getSyncVersion());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(34);

		sb.append("<model><model-name>");
		sb.append("vn.dtt.duongbien.dao.vrcb.model.DmGtOrganization");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>organizationCode</column-name><column-value><![CDATA[");
		sb.append(getOrganizationCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>organizationName</column-name><column-value><![CDATA[");
		sb.append(getOrganizationName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>organizationNameVN</column-name><column-value><![CDATA[");
		sb.append(getOrganizationNameVN());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>organizationorder</column-name><column-value><![CDATA[");
		sb.append(getOrganizationorder());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isDelete</column-name><column-value><![CDATA[");
		sb.append(getIsDelete());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>markedAsDelete</column-name><column-value><![CDATA[");
		sb.append(getMarkedAsDelete());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>requestedDate</column-name><column-value><![CDATA[");
		sb.append(getRequestedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>syncVersion</column-name><column-value><![CDATA[");
		sb.append(getSyncVersion());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = DmGtOrganization.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			DmGtOrganization.class
		};
	private long _id;
	private String _organizationCode;
	private String _originalOrganizationCode;
	private String _organizationName;
	private String _organizationNameVN;
	private int _organizationorder;
	private int _isDelete;
	private int _markedAsDelete;
	private Date _modifiedDate;
	private Date _requestedDate;
	private String _syncVersion;
	private long _columnBitmask;
	private DmGtOrganization _escapedModel;
}