/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dtt.duongbien.dao.vrcb.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import vn.dtt.duongbien.dao.vrcb.model.CrewList;
import vn.dtt.duongbien.dao.vrcb.model.CrewListModel;
import vn.dtt.duongbien.dao.vrcb.model.CrewListSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the CrewList service. Represents a row in the &quot;crew_list&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link vn.dtt.duongbien.dao.vrcb.model.CrewListModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CrewListImpl}.
 * </p>
 *
 * @author longdm
 * @see CrewListImpl
 * @see vn.dtt.duongbien.dao.vrcb.model.CrewList
 * @see vn.dtt.duongbien.dao.vrcb.model.CrewListModel
 * @generated
 */
@JSON(strict = true)
public class CrewListModelImpl extends BaseModelImpl<CrewList>
	implements CrewListModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a crew list model instance should use the {@link vn.dtt.duongbien.dao.vrcb.model.CrewList} interface instead.
	 */
	public static final String TABLE_NAME = "crew_list";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id", Types.BIGINT },
			{ "crewcode", Types.VARCHAR },
			{ "documentno", Types.VARCHAR },
			{ "statecode", Types.VARCHAR },
			{ "birthday", Types.TIMESTAMP },
			{ "birthplace", Types.VARCHAR },
			{ "familyname", Types.VARCHAR },
			{ "fullname", Types.VARCHAR },
			{ "givenname", Types.VARCHAR },
			{ "passportnumber", Types.VARCHAR },
			{ "passporttype", Types.VARCHAR },
			{ "rankcode", Types.VARCHAR },
			{ "createdate", Types.TIMESTAMP },
			{ "modifydate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table crew_list (id LONG not null primary key,crewcode VARCHAR(75) null,documentno VARCHAR(75) null,statecode VARCHAR(75) null,birthday DATE null,birthplace VARCHAR(75) null,familyname VARCHAR(75) null,fullname VARCHAR(75) null,givenname VARCHAR(75) null,passportnumber VARCHAR(75) null,passporttype VARCHAR(75) null,rankcode VARCHAR(75) null,createdate DATE null,modifydate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table crew_list";
	public static final String ORDER_BY_JPQL = " ORDER BY crewList.createDate ASC";
	public static final String ORDER_BY_SQL = " ORDER BY crew_list.createdate ASC";
	public static final String DATA_SOURCE = "vaoracangbienDataSource";
	public static final String SESSION_FACTORY = "ravaocangbienSessionFactory";
	public static final String TX_MANAGER = "ravaocangbienTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.dtt.duongbien.dao.vrcb.model.CrewList"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.dtt.duongbien.dao.vrcb.model.CrewList"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static CrewList toModel(CrewListSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		CrewList model = new CrewListImpl();

		model.setId(soapModel.getId());
		model.setCrewCode(soapModel.getCrewCode());
		model.setDocumentNo(soapModel.getDocumentNo());
		model.setStateCode(soapModel.getStateCode());
		model.setBirthDay(soapModel.getBirthDay());
		model.setBirthPlace(soapModel.getBirthPlace());
		model.setFamilyName(soapModel.getFamilyName());
		model.setFullName(soapModel.getFullName());
		model.setGivenName(soapModel.getGivenName());
		model.setPassportNumber(soapModel.getPassportNumber());
		model.setPassportType(soapModel.getPassportType());
		model.setRankCode(soapModel.getRankCode());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifyDate(soapModel.getModifyDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<CrewList> toModels(CrewListSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<CrewList> models = new ArrayList<CrewList>(soapModels.length);

		for (CrewListSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.vn.dtt.duongbien.dao.vrcb.model.CrewList"));

	public CrewListModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CrewList.class;
	}

	@Override
	public String getModelClassName() {
		return CrewList.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("crewCode", getCrewCode());
		attributes.put("documentNo", getDocumentNo());
		attributes.put("stateCode", getStateCode());
		attributes.put("birthDay", getBirthDay());
		attributes.put("birthPlace", getBirthPlace());
		attributes.put("familyName", getFamilyName());
		attributes.put("fullName", getFullName());
		attributes.put("givenName", getGivenName());
		attributes.put("passportNumber", getPassportNumber());
		attributes.put("passportType", getPassportType());
		attributes.put("rankCode", getRankCode());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifyDate", getModifyDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		String crewCode = (String)attributes.get("crewCode");

		if (crewCode != null) {
			setCrewCode(crewCode);
		}

		String documentNo = (String)attributes.get("documentNo");

		if (documentNo != null) {
			setDocumentNo(documentNo);
		}

		String stateCode = (String)attributes.get("stateCode");

		if (stateCode != null) {
			setStateCode(stateCode);
		}

		Date birthDay = (Date)attributes.get("birthDay");

		if (birthDay != null) {
			setBirthDay(birthDay);
		}

		String birthPlace = (String)attributes.get("birthPlace");

		if (birthPlace != null) {
			setBirthPlace(birthPlace);
		}

		String familyName = (String)attributes.get("familyName");

		if (familyName != null) {
			setFamilyName(familyName);
		}

		String fullName = (String)attributes.get("fullName");

		if (fullName != null) {
			setFullName(fullName);
		}

		String givenName = (String)attributes.get("givenName");

		if (givenName != null) {
			setGivenName(givenName);
		}

		String passportNumber = (String)attributes.get("passportNumber");

		if (passportNumber != null) {
			setPassportNumber(passportNumber);
		}

		String passportType = (String)attributes.get("passportType");

		if (passportType != null) {
			setPassportType(passportType);
		}

		String rankCode = (String)attributes.get("rankCode");

		if (rankCode != null) {
			setRankCode(rankCode);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifyDate = (Date)attributes.get("modifyDate");

		if (modifyDate != null) {
			setModifyDate(modifyDate);
		}
	}

	@JSON
	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_id = id;
	}

	@JSON
	@Override
	public String getCrewCode() {
		if (_crewCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _crewCode;
		}
	}

	@Override
	public void setCrewCode(String crewCode) {
		_crewCode = crewCode;
	}

	@JSON
	@Override
	public String getDocumentNo() {
		if (_documentNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _documentNo;
		}
	}

	@Override
	public void setDocumentNo(String documentNo) {
		_documentNo = documentNo;
	}

	@JSON
	@Override
	public String getStateCode() {
		if (_stateCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _stateCode;
		}
	}

	@Override
	public void setStateCode(String stateCode) {
		_stateCode = stateCode;
	}

	@JSON
	@Override
	public Date getBirthDay() {
		return _birthDay;
	}

	@Override
	public void setBirthDay(Date birthDay) {
		_birthDay = birthDay;
	}

	@JSON
	@Override
	public String getBirthPlace() {
		if (_birthPlace == null) {
			return StringPool.BLANK;
		}
		else {
			return _birthPlace;
		}
	}

	@Override
	public void setBirthPlace(String birthPlace) {
		_birthPlace = birthPlace;
	}

	@JSON
	@Override
	public String getFamilyName() {
		if (_familyName == null) {
			return StringPool.BLANK;
		}
		else {
			return _familyName;
		}
	}

	@Override
	public void setFamilyName(String familyName) {
		_familyName = familyName;
	}

	@JSON
	@Override
	public String getFullName() {
		if (_fullName == null) {
			return StringPool.BLANK;
		}
		else {
			return _fullName;
		}
	}

	@Override
	public void setFullName(String fullName) {
		_fullName = fullName;
	}

	@JSON
	@Override
	public String getGivenName() {
		if (_givenName == null) {
			return StringPool.BLANK;
		}
		else {
			return _givenName;
		}
	}

	@Override
	public void setGivenName(String givenName) {
		_givenName = givenName;
	}

	@JSON
	@Override
	public String getPassportNumber() {
		if (_passportNumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _passportNumber;
		}
	}

	@Override
	public void setPassportNumber(String passportNumber) {
		_passportNumber = passportNumber;
	}

	@JSON
	@Override
	public String getPassportType() {
		if (_passportType == null) {
			return StringPool.BLANK;
		}
		else {
			return _passportType;
		}
	}

	@Override
	public void setPassportType(String passportType) {
		_passportType = passportType;
	}

	@JSON
	@Override
	public String getRankCode() {
		if (_rankCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _rankCode;
		}
	}

	@Override
	public void setRankCode(String rankCode) {
		_rankCode = rankCode;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifyDate() {
		return _modifyDate;
	}

	@Override
	public void setModifyDate(Date modifyDate) {
		_modifyDate = modifyDate;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			CrewList.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CrewList toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (CrewList)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CrewListImpl crewListImpl = new CrewListImpl();

		crewListImpl.setId(getId());
		crewListImpl.setCrewCode(getCrewCode());
		crewListImpl.setDocumentNo(getDocumentNo());
		crewListImpl.setStateCode(getStateCode());
		crewListImpl.setBirthDay(getBirthDay());
		crewListImpl.setBirthPlace(getBirthPlace());
		crewListImpl.setFamilyName(getFamilyName());
		crewListImpl.setFullName(getFullName());
		crewListImpl.setGivenName(getGivenName());
		crewListImpl.setPassportNumber(getPassportNumber());
		crewListImpl.setPassportType(getPassportType());
		crewListImpl.setRankCode(getRankCode());
		crewListImpl.setCreateDate(getCreateDate());
		crewListImpl.setModifyDate(getModifyDate());

		crewListImpl.resetOriginalValues();

		return crewListImpl;
	}

	@Override
	public int compareTo(CrewList crewList) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(), crewList.getCreateDate());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CrewList)) {
			return false;
		}

		CrewList crewList = (CrewList)obj;

		long primaryKey = crewList.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<CrewList> toCacheModel() {
		CrewListCacheModel crewListCacheModel = new CrewListCacheModel();

		crewListCacheModel.id = getId();

		crewListCacheModel.crewCode = getCrewCode();

		String crewCode = crewListCacheModel.crewCode;

		if ((crewCode != null) && (crewCode.length() == 0)) {
			crewListCacheModel.crewCode = null;
		}

		crewListCacheModel.documentNo = getDocumentNo();

		String documentNo = crewListCacheModel.documentNo;

		if ((documentNo != null) && (documentNo.length() == 0)) {
			crewListCacheModel.documentNo = null;
		}

		crewListCacheModel.stateCode = getStateCode();

		String stateCode = crewListCacheModel.stateCode;

		if ((stateCode != null) && (stateCode.length() == 0)) {
			crewListCacheModel.stateCode = null;
		}

		Date birthDay = getBirthDay();

		if (birthDay != null) {
			crewListCacheModel.birthDay = birthDay.getTime();
		}
		else {
			crewListCacheModel.birthDay = Long.MIN_VALUE;
		}

		crewListCacheModel.birthPlace = getBirthPlace();

		String birthPlace = crewListCacheModel.birthPlace;

		if ((birthPlace != null) && (birthPlace.length() == 0)) {
			crewListCacheModel.birthPlace = null;
		}

		crewListCacheModel.familyName = getFamilyName();

		String familyName = crewListCacheModel.familyName;

		if ((familyName != null) && (familyName.length() == 0)) {
			crewListCacheModel.familyName = null;
		}

		crewListCacheModel.fullName = getFullName();

		String fullName = crewListCacheModel.fullName;

		if ((fullName != null) && (fullName.length() == 0)) {
			crewListCacheModel.fullName = null;
		}

		crewListCacheModel.givenName = getGivenName();

		String givenName = crewListCacheModel.givenName;

		if ((givenName != null) && (givenName.length() == 0)) {
			crewListCacheModel.givenName = null;
		}

		crewListCacheModel.passportNumber = getPassportNumber();

		String passportNumber = crewListCacheModel.passportNumber;

		if ((passportNumber != null) && (passportNumber.length() == 0)) {
			crewListCacheModel.passportNumber = null;
		}

		crewListCacheModel.passportType = getPassportType();

		String passportType = crewListCacheModel.passportType;

		if ((passportType != null) && (passportType.length() == 0)) {
			crewListCacheModel.passportType = null;
		}

		crewListCacheModel.rankCode = getRankCode();

		String rankCode = crewListCacheModel.rankCode;

		if ((rankCode != null) && (rankCode.length() == 0)) {
			crewListCacheModel.rankCode = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			crewListCacheModel.createDate = createDate.getTime();
		}
		else {
			crewListCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifyDate = getModifyDate();

		if (modifyDate != null) {
			crewListCacheModel.modifyDate = modifyDate.getTime();
		}
		else {
			crewListCacheModel.modifyDate = Long.MIN_VALUE;
		}

		return crewListCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(29);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", crewCode=");
		sb.append(getCrewCode());
		sb.append(", documentNo=");
		sb.append(getDocumentNo());
		sb.append(", stateCode=");
		sb.append(getStateCode());
		sb.append(", birthDay=");
		sb.append(getBirthDay());
		sb.append(", birthPlace=");
		sb.append(getBirthPlace());
		sb.append(", familyName=");
		sb.append(getFamilyName());
		sb.append(", fullName=");
		sb.append(getFullName());
		sb.append(", givenName=");
		sb.append(getGivenName());
		sb.append(", passportNumber=");
		sb.append(getPassportNumber());
		sb.append(", passportType=");
		sb.append(getPassportType());
		sb.append(", rankCode=");
		sb.append(getRankCode());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifyDate=");
		sb.append(getModifyDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(46);

		sb.append("<model><model-name>");
		sb.append("vn.dtt.duongbien.dao.vrcb.model.CrewList");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>crewCode</column-name><column-value><![CDATA[");
		sb.append(getCrewCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>documentNo</column-name><column-value><![CDATA[");
		sb.append(getDocumentNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>stateCode</column-name><column-value><![CDATA[");
		sb.append(getStateCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>birthDay</column-name><column-value><![CDATA[");
		sb.append(getBirthDay());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>birthPlace</column-name><column-value><![CDATA[");
		sb.append(getBirthPlace());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>familyName</column-name><column-value><![CDATA[");
		sb.append(getFamilyName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fullName</column-name><column-value><![CDATA[");
		sb.append(getFullName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>givenName</column-name><column-value><![CDATA[");
		sb.append(getGivenName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>passportNumber</column-name><column-value><![CDATA[");
		sb.append(getPassportNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>passportType</column-name><column-value><![CDATA[");
		sb.append(getPassportType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rankCode</column-name><column-value><![CDATA[");
		sb.append(getRankCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifyDate</column-name><column-value><![CDATA[");
		sb.append(getModifyDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = CrewList.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			CrewList.class
		};
	private long _id;
	private String _crewCode;
	private String _documentNo;
	private String _stateCode;
	private Date _birthDay;
	private String _birthPlace;
	private String _familyName;
	private String _fullName;
	private String _givenName;
	private String _passportNumber;
	private String _passportType;
	private String _rankCode;
	private Date _createDate;
	private Date _modifyDate;
	private CrewList _escapedModel;
}