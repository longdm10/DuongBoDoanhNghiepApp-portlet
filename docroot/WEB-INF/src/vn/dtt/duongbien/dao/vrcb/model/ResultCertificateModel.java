/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dtt.duongbien.dao.vrcb.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the ResultCertificate service. Represents a row in the &quot;result_certificate&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link vn.dtt.duongbien.dao.vrcb.model.impl.ResultCertificateModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link vn.dtt.duongbien.dao.vrcb.model.impl.ResultCertificateImpl}.
 * </p>
 *
 * @author longdm
 * @see ResultCertificate
 * @see vn.dtt.duongbien.dao.vrcb.model.impl.ResultCertificateImpl
 * @see vn.dtt.duongbien.dao.vrcb.model.impl.ResultCertificateModelImpl
 * @generated
 */
public interface ResultCertificateModel extends BaseModel<ResultCertificate> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a result certificate model instance should use the {@link ResultCertificate} interface instead.
	 */

	/**
	 * Returns the primary key of this result certificate.
	 *
	 * @return the primary key of this result certificate
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this result certificate.
	 *
	 * @param primaryKey the primary key of this result certificate
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this result certificate.
	 *
	 * @return the ID of this result certificate
	 */
	public long getId();

	/**
	 * Sets the ID of this result certificate.
	 *
	 * @param id the ID of this result certificate
	 */
	public void setId(long id);

	/**
	 * Returns the document name of this result certificate.
	 *
	 * @return the document name of this result certificate
	 */
	public long getDocumentName();

	/**
	 * Sets the document name of this result certificate.
	 *
	 * @param documentName the document name of this result certificate
	 */
	public void setDocumentName(long documentName);

	/**
	 * Returns the document year of this result certificate.
	 *
	 * @return the document year of this result certificate
	 */
	public int getDocumentYear();

	/**
	 * Sets the document year of this result certificate.
	 *
	 * @param documentYear the document year of this result certificate
	 */
	public void setDocumentYear(int documentYear);

	/**
	 * Returns the maritime code of this result certificate.
	 *
	 * @return the maritime code of this result certificate
	 */
	@AutoEscape
	public String getMaritimeCode();

	/**
	 * Sets the maritime code of this result certificate.
	 *
	 * @param maritimeCode the maritime code of this result certificate
	 */
	public void setMaritimeCode(String maritimeCode);

	/**
	 * Returns the certificate code of this result certificate.
	 *
	 * @return the certificate code of this result certificate
	 */
	@AutoEscape
	public String getCertificateCode();

	/**
	 * Sets the certificate code of this result certificate.
	 *
	 * @param certificateCode the certificate code of this result certificate
	 */
	public void setCertificateCode(String certificateCode);

	/**
	 * Returns the certificate order of this result certificate.
	 *
	 * @return the certificate order of this result certificate
	 */
	public int getCertificateOrder();

	/**
	 * Sets the certificate order of this result certificate.
	 *
	 * @param certificateOrder the certificate order of this result certificate
	 */
	public void setCertificateOrder(int certificateOrder);

	/**
	 * Returns the certificate no of this result certificate.
	 *
	 * @return the certificate no of this result certificate
	 */
	@AutoEscape
	public String getCertificateNo();

	/**
	 * Sets the certificate no of this result certificate.
	 *
	 * @param certificateNo the certificate no of this result certificate
	 */
	public void setCertificateNo(String certificateNo);

	/**
	 * Returns the certificate issue date of this result certificate.
	 *
	 * @return the certificate issue date of this result certificate
	 */
	public Date getCertificateIssueDate();

	/**
	 * Sets the certificate issue date of this result certificate.
	 *
	 * @param certificateIssueDate the certificate issue date of this result certificate
	 */
	public void setCertificateIssueDate(Date certificateIssueDate);

	/**
	 * Returns the certificate expired date of this result certificate.
	 *
	 * @return the certificate expired date of this result certificate
	 */
	public Date getCertificateExpiredDate();

	/**
	 * Sets the certificate expired date of this result certificate.
	 *
	 * @param certificateExpiredDate the certificate expired date of this result certificate
	 */
	public void setCertificateExpiredDate(Date certificateExpiredDate);

	/**
	 * Returns the examination date of this result certificate.
	 *
	 * @return the examination date of this result certificate
	 */
	public Date getExaminationDate();

	/**
	 * Sets the examination date of this result certificate.
	 *
	 * @param examinationDate the examination date of this result certificate
	 */
	public void setExaminationDate(Date examinationDate);

	/**
	 * Returns the approval name of this result certificate.
	 *
	 * @return the approval name of this result certificate
	 */
	@AutoEscape
	public String getApprovalName();

	/**
	 * Sets the approval name of this result certificate.
	 *
	 * @param approvalName the approval name of this result certificate
	 */
	public void setApprovalName(String approvalName);

	/**
	 * Returns the is examined of this result certificate.
	 *
	 * @return the is examined of this result certificate
	 */
	public int getIsExamined();

	/**
	 * Sets the is examined of this result certificate.
	 *
	 * @param isExamined the is examined of this result certificate
	 */
	public void setIsExamined(int isExamined);

	/**
	 * Returns the mandatory of this result certificate.
	 *
	 * @return the mandatory of this result certificate
	 */
	public int getMandatory();

	/**
	 * Sets the mandatory of this result certificate.
	 *
	 * @param mandatory the mandatory of this result certificate
	 */
	public void setMandatory(int mandatory);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(ResultCertificate resultCertificate);

	@Override
	public int hashCode();

	@Override
	public CacheModel<ResultCertificate> toCacheModel();

	@Override
	public ResultCertificate toEscapedModel();

	@Override
	public ResultCertificate toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}