/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dtt.duongbien.dao.vrcb.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import vn.dtt.duongbien.dao.vrcb.model.TempCrewEffectsItems;
import vn.dtt.duongbien.dao.vrcb.model.TempCrewEffectsItemsModel;
import vn.dtt.duongbien.dao.vrcb.model.TempCrewEffectsItemsSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the TempCrewEffectsItems service. Represents a row in the &quot;TEMP_CREW_EFFECTS_ITEMS&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link vn.dtt.duongbien.dao.vrcb.model.TempCrewEffectsItemsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TempCrewEffectsItemsImpl}.
 * </p>
 *
 * @author longdm
 * @see TempCrewEffectsItemsImpl
 * @see vn.dtt.duongbien.dao.vrcb.model.TempCrewEffectsItems
 * @see vn.dtt.duongbien.dao.vrcb.model.TempCrewEffectsItemsModel
 * @generated
 */
@JSON(strict = true)
public class TempCrewEffectsItemsModelImpl extends BaseModelImpl<TempCrewEffectsItems>
	implements TempCrewEffectsItemsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a temp crew effects items model instance should use the {@link vn.dtt.duongbien.dao.vrcb.model.TempCrewEffectsItems} interface instead.
	 */
	public static final String TABLE_NAME = "TEMP_CREW_EFFECTS_ITEMS";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ID", Types.BIGINT },
			{ "RequestCode", Types.VARCHAR },
			{ "CrewEffectItemCode", Types.VARCHAR },
			{ "FamilyName", Types.VARCHAR },
			{ "GivenName", Types.VARCHAR },
			{ "RankOrRatingCode", Types.VARCHAR },
			{ "EffectsIneligibleForRelief", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table TEMP_CREW_EFFECTS_ITEMS (ID LONG not null primary key,RequestCode VARCHAR(75) null,CrewEffectItemCode VARCHAR(75) null,FamilyName VARCHAR(75) null,GivenName VARCHAR(75) null,RankOrRatingCode VARCHAR(75) null,EffectsIneligibleForRelief VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table TEMP_CREW_EFFECTS_ITEMS";
	public static final String ORDER_BY_JPQL = " ORDER BY tempCrewEffectsItems.id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY TEMP_CREW_EFFECTS_ITEMS.ID ASC";
	public static final String DATA_SOURCE = "vaoracangbienDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.dtt.duongbien.dao.vrcb.model.TempCrewEffectsItems"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.dtt.duongbien.dao.vrcb.model.TempCrewEffectsItems"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.vn.dtt.duongbien.dao.vrcb.model.TempCrewEffectsItems"),
			true);
	public static long REQUESTCODE_COLUMN_BITMASK = 1L;
	public static long ID_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static TempCrewEffectsItems toModel(
		TempCrewEffectsItemsSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		TempCrewEffectsItems model = new TempCrewEffectsItemsImpl();

		model.setId(soapModel.getId());
		model.setRequestCode(soapModel.getRequestCode());
		model.setCrewEffectItemcode(soapModel.getCrewEffectItemcode());
		model.setFamilyName(soapModel.getFamilyName());
		model.setGivenName(soapModel.getGivenName());
		model.setRankOrratingCode(soapModel.getRankOrratingCode());
		model.setEffectsIneligibleForRelief(soapModel.getEffectsIneligibleForRelief());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<TempCrewEffectsItems> toModels(
		TempCrewEffectsItemsSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<TempCrewEffectsItems> models = new ArrayList<TempCrewEffectsItems>(soapModels.length);

		for (TempCrewEffectsItemsSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.vn.dtt.duongbien.dao.vrcb.model.TempCrewEffectsItems"));

	public TempCrewEffectsItemsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return TempCrewEffectsItems.class;
	}

	@Override
	public String getModelClassName() {
		return TempCrewEffectsItems.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("requestCode", getRequestCode());
		attributes.put("crewEffectItemcode", getCrewEffectItemcode());
		attributes.put("familyName", getFamilyName());
		attributes.put("givenName", getGivenName());
		attributes.put("rankOrratingCode", getRankOrratingCode());
		attributes.put("effectsIneligibleForRelief",
			getEffectsIneligibleForRelief());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		String requestCode = (String)attributes.get("requestCode");

		if (requestCode != null) {
			setRequestCode(requestCode);
		}

		String crewEffectItemcode = (String)attributes.get("crewEffectItemcode");

		if (crewEffectItemcode != null) {
			setCrewEffectItemcode(crewEffectItemcode);
		}

		String familyName = (String)attributes.get("familyName");

		if (familyName != null) {
			setFamilyName(familyName);
		}

		String givenName = (String)attributes.get("givenName");

		if (givenName != null) {
			setGivenName(givenName);
		}

		String rankOrratingCode = (String)attributes.get("rankOrratingCode");

		if (rankOrratingCode != null) {
			setRankOrratingCode(rankOrratingCode);
		}

		String effectsIneligibleForRelief = (String)attributes.get(
				"effectsIneligibleForRelief");

		if (effectsIneligibleForRelief != null) {
			setEffectsIneligibleForRelief(effectsIneligibleForRelief);
		}
	}

	@JSON
	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_columnBitmask = -1L;

		_id = id;
	}

	@JSON
	@Override
	public String getRequestCode() {
		if (_requestCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _requestCode;
		}
	}

	@Override
	public void setRequestCode(String requestCode) {
		_columnBitmask |= REQUESTCODE_COLUMN_BITMASK;

		if (_originalRequestCode == null) {
			_originalRequestCode = _requestCode;
		}

		_requestCode = requestCode;
	}

	public String getOriginalRequestCode() {
		return GetterUtil.getString(_originalRequestCode);
	}

	@JSON
	@Override
	public String getCrewEffectItemcode() {
		if (_crewEffectItemcode == null) {
			return StringPool.BLANK;
		}
		else {
			return _crewEffectItemcode;
		}
	}

	@Override
	public void setCrewEffectItemcode(String crewEffectItemcode) {
		_crewEffectItemcode = crewEffectItemcode;
	}

	@JSON
	@Override
	public String getFamilyName() {
		if (_familyName == null) {
			return StringPool.BLANK;
		}
		else {
			return _familyName;
		}
	}

	@Override
	public void setFamilyName(String familyName) {
		_familyName = familyName;
	}

	@JSON
	@Override
	public String getGivenName() {
		if (_givenName == null) {
			return StringPool.BLANK;
		}
		else {
			return _givenName;
		}
	}

	@Override
	public void setGivenName(String givenName) {
		_givenName = givenName;
	}

	@JSON
	@Override
	public String getRankOrratingCode() {
		if (_rankOrratingCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _rankOrratingCode;
		}
	}

	@Override
	public void setRankOrratingCode(String rankOrratingCode) {
		_rankOrratingCode = rankOrratingCode;
	}

	@JSON
	@Override
	public String getEffectsIneligibleForRelief() {
		if (_effectsIneligibleForRelief == null) {
			return StringPool.BLANK;
		}
		else {
			return _effectsIneligibleForRelief;
		}
	}

	@Override
	public void setEffectsIneligibleForRelief(String effectsIneligibleForRelief) {
		_effectsIneligibleForRelief = effectsIneligibleForRelief;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			TempCrewEffectsItems.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public TempCrewEffectsItems toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (TempCrewEffectsItems)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		TempCrewEffectsItemsImpl tempCrewEffectsItemsImpl = new TempCrewEffectsItemsImpl();

		tempCrewEffectsItemsImpl.setId(getId());
		tempCrewEffectsItemsImpl.setRequestCode(getRequestCode());
		tempCrewEffectsItemsImpl.setCrewEffectItemcode(getCrewEffectItemcode());
		tempCrewEffectsItemsImpl.setFamilyName(getFamilyName());
		tempCrewEffectsItemsImpl.setGivenName(getGivenName());
		tempCrewEffectsItemsImpl.setRankOrratingCode(getRankOrratingCode());
		tempCrewEffectsItemsImpl.setEffectsIneligibleForRelief(getEffectsIneligibleForRelief());

		tempCrewEffectsItemsImpl.resetOriginalValues();

		return tempCrewEffectsItemsImpl;
	}

	@Override
	public int compareTo(TempCrewEffectsItems tempCrewEffectsItems) {
		int value = 0;

		if (getId() < tempCrewEffectsItems.getId()) {
			value = -1;
		}
		else if (getId() > tempCrewEffectsItems.getId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof TempCrewEffectsItems)) {
			return false;
		}

		TempCrewEffectsItems tempCrewEffectsItems = (TempCrewEffectsItems)obj;

		long primaryKey = tempCrewEffectsItems.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		TempCrewEffectsItemsModelImpl tempCrewEffectsItemsModelImpl = this;

		tempCrewEffectsItemsModelImpl._originalRequestCode = tempCrewEffectsItemsModelImpl._requestCode;

		tempCrewEffectsItemsModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<TempCrewEffectsItems> toCacheModel() {
		TempCrewEffectsItemsCacheModel tempCrewEffectsItemsCacheModel = new TempCrewEffectsItemsCacheModel();

		tempCrewEffectsItemsCacheModel.id = getId();

		tempCrewEffectsItemsCacheModel.requestCode = getRequestCode();

		String requestCode = tempCrewEffectsItemsCacheModel.requestCode;

		if ((requestCode != null) && (requestCode.length() == 0)) {
			tempCrewEffectsItemsCacheModel.requestCode = null;
		}

		tempCrewEffectsItemsCacheModel.crewEffectItemcode = getCrewEffectItemcode();

		String crewEffectItemcode = tempCrewEffectsItemsCacheModel.crewEffectItemcode;

		if ((crewEffectItemcode != null) && (crewEffectItemcode.length() == 0)) {
			tempCrewEffectsItemsCacheModel.crewEffectItemcode = null;
		}

		tempCrewEffectsItemsCacheModel.familyName = getFamilyName();

		String familyName = tempCrewEffectsItemsCacheModel.familyName;

		if ((familyName != null) && (familyName.length() == 0)) {
			tempCrewEffectsItemsCacheModel.familyName = null;
		}

		tempCrewEffectsItemsCacheModel.givenName = getGivenName();

		String givenName = tempCrewEffectsItemsCacheModel.givenName;

		if ((givenName != null) && (givenName.length() == 0)) {
			tempCrewEffectsItemsCacheModel.givenName = null;
		}

		tempCrewEffectsItemsCacheModel.rankOrratingCode = getRankOrratingCode();

		String rankOrratingCode = tempCrewEffectsItemsCacheModel.rankOrratingCode;

		if ((rankOrratingCode != null) && (rankOrratingCode.length() == 0)) {
			tempCrewEffectsItemsCacheModel.rankOrratingCode = null;
		}

		tempCrewEffectsItemsCacheModel.effectsIneligibleForRelief = getEffectsIneligibleForRelief();

		String effectsIneligibleForRelief = tempCrewEffectsItemsCacheModel.effectsIneligibleForRelief;

		if ((effectsIneligibleForRelief != null) &&
				(effectsIneligibleForRelief.length() == 0)) {
			tempCrewEffectsItemsCacheModel.effectsIneligibleForRelief = null;
		}

		return tempCrewEffectsItemsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(15);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", requestCode=");
		sb.append(getRequestCode());
		sb.append(", crewEffectItemcode=");
		sb.append(getCrewEffectItemcode());
		sb.append(", familyName=");
		sb.append(getFamilyName());
		sb.append(", givenName=");
		sb.append(getGivenName());
		sb.append(", rankOrratingCode=");
		sb.append(getRankOrratingCode());
		sb.append(", effectsIneligibleForRelief=");
		sb.append(getEffectsIneligibleForRelief());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(25);

		sb.append("<model><model-name>");
		sb.append("vn.dtt.duongbien.dao.vrcb.model.TempCrewEffectsItems");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>requestCode</column-name><column-value><![CDATA[");
		sb.append(getRequestCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>crewEffectItemcode</column-name><column-value><![CDATA[");
		sb.append(getCrewEffectItemcode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>familyName</column-name><column-value><![CDATA[");
		sb.append(getFamilyName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>givenName</column-name><column-value><![CDATA[");
		sb.append(getGivenName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rankOrratingCode</column-name><column-value><![CDATA[");
		sb.append(getRankOrratingCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>effectsIneligibleForRelief</column-name><column-value><![CDATA[");
		sb.append(getEffectsIneligibleForRelief());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = TempCrewEffectsItems.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			TempCrewEffectsItems.class
		};
	private long _id;
	private String _requestCode;
	private String _originalRequestCode;
	private String _crewEffectItemcode;
	private String _familyName;
	private String _givenName;
	private String _rankOrratingCode;
	private String _effectsIneligibleForRelief;
	private long _columnBitmask;
	private TempCrewEffectsItems _escapedModel;
}