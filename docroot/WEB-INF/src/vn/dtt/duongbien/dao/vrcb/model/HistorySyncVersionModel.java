/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dtt.duongbien.dao.vrcb.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the HistorySyncVersion service. Represents a row in the &quot;history_sync_version&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link vn.dtt.duongbien.dao.vrcb.model.impl.HistorySyncVersionModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link vn.dtt.duongbien.dao.vrcb.model.impl.HistorySyncVersionImpl}.
 * </p>
 *
 * @author longdm
 * @see HistorySyncVersion
 * @see vn.dtt.duongbien.dao.vrcb.model.impl.HistorySyncVersionImpl
 * @see vn.dtt.duongbien.dao.vrcb.model.impl.HistorySyncVersionModelImpl
 * @generated
 */
public interface HistorySyncVersionModel extends BaseModel<HistorySyncVersion> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a history sync version model instance should use the {@link HistorySyncVersion} interface instead.
	 */

	/**
	 * Returns the primary key of this history sync version.
	 *
	 * @return the primary key of this history sync version
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this history sync version.
	 *
	 * @param primaryKey the primary key of this history sync version
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this history sync version.
	 *
	 * @return the ID of this history sync version
	 */
	public long getId();

	/**
	 * Sets the ID of this history sync version.
	 *
	 * @param id the ID of this history sync version
	 */
	public void setId(long id);

	/**
	 * Returns the requested date of this history sync version.
	 *
	 * @return the requested date of this history sync version
	 */
	public Date getRequestedDate();

	/**
	 * Sets the requested date of this history sync version.
	 *
	 * @param requestedDate the requested date of this history sync version
	 */
	public void setRequestedDate(Date requestedDate);

	/**
	 * Returns the timeof publish of this history sync version.
	 *
	 * @return the timeof publish of this history sync version
	 */
	public Date getTimeofPublish();

	/**
	 * Sets the timeof publish of this history sync version.
	 *
	 * @param timeofPublish the timeof publish of this history sync version
	 */
	public void setTimeofPublish(Date timeofPublish);

	/**
	 * Returns the category i d of this history sync version.
	 *
	 * @return the category i d of this history sync version
	 */
	@AutoEscape
	public String getCategoryID();

	/**
	 * Sets the category i d of this history sync version.
	 *
	 * @param categoryID the category i d of this history sync version
	 */
	public void setCategoryID(String categoryID);

	/**
	 * Returns the sync unit of this history sync version.
	 *
	 * @return the sync unit of this history sync version
	 */
	@AutoEscape
	public String getSyncUnit();

	/**
	 * Sets the sync unit of this history sync version.
	 *
	 * @param syncUnit the sync unit of this history sync version
	 */
	public void setSyncUnit(String syncUnit);

	/**
	 * Returns the sync user of this history sync version.
	 *
	 * @return the sync user of this history sync version
	 */
	@AutoEscape
	public String getSyncUser();

	/**
	 * Sets the sync user of this history sync version.
	 *
	 * @param syncUser the sync user of this history sync version
	 */
	public void setSyncUser(String syncUser);

	/**
	 * Returns the sync version of this history sync version.
	 *
	 * @return the sync version of this history sync version
	 */
	@AutoEscape
	public String getSyncVersion();

	/**
	 * Sets the sync version of this history sync version.
	 *
	 * @param syncVersion the sync version of this history sync version
	 */
	public void setSyncVersion(String syncVersion);

	/**
	 * Returns the latest value date of this history sync version.
	 *
	 * @return the latest value date of this history sync version
	 */
	public Date getLatestValueDate();

	/**
	 * Sets the latest value date of this history sync version.
	 *
	 * @param latestValueDate the latest value date of this history sync version
	 */
	public void setLatestValueDate(Date latestValueDate);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(HistorySyncVersion historySyncVersion);

	@Override
	public int hashCode();

	@Override
	public CacheModel<HistorySyncVersion> toCacheModel();

	@Override
	public HistorySyncVersion toEscapedModel();

	@Override
	public HistorySyncVersion toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}