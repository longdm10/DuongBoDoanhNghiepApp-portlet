/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dtt.duongbo.dao.doanhnghiep.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import vn.dtt.duongbo.dao.doanhnghiep.model.DnDoanhNghiepUser;
import vn.dtt.duongbo.dao.doanhnghiep.model.DnDoanhNghiepUserModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the DnDoanhNghiepUser service. Represents a row in the &quot;dn_nguoilamthutuc_user&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link vn.dtt.duongbo.dao.doanhnghiep.model.DnDoanhNghiepUserModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DnDoanhNghiepUserImpl}.
 * </p>
 *
 * @author win_64
 * @see DnDoanhNghiepUserImpl
 * @see vn.dtt.duongbo.dao.doanhnghiep.model.DnDoanhNghiepUser
 * @see vn.dtt.duongbo.dao.doanhnghiep.model.DnDoanhNghiepUserModel
 * @generated
 */
public class DnDoanhNghiepUserModelImpl extends BaseModelImpl<DnDoanhNghiepUser>
	implements DnDoanhNghiepUserModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a dn doanh nghiep user model instance should use the {@link vn.dtt.duongbo.dao.doanhnghiep.model.DnDoanhNghiepUser} interface instead.
	 */
	public static final String TABLE_NAME = "dn_nguoilamthutuc_user";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id", Types.BIGINT },
			{ "NGUOILAMTHUTUCID", Types.BIGINT },
			{ "USERID", Types.BIGINT },
			{ "TOCHUCQUANLY", Types.VARCHAR },
			{ "MASTER", Types.VARCHAR },
			{ "TENTAIKHOAN", Types.VARCHAR },
			{ "TENNGUOIDUNG", Types.VARCHAR },
			{ "TINHTRANGHOATDONG", Types.VARCHAR },
			{ "DIENTHOAI", Types.VARCHAR },
			{ "NGAYTAOTAIKHOAN", Types.TIMESTAMP },
			{ "NGAYMOTAIKHOAN", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table dn_nguoilamthutuc_user (id LONG not null primary key,NGUOILAMTHUTUCID LONG,USERID LONG,TOCHUCQUANLY VARCHAR(75) null,MASTER VARCHAR(75) null,TENTAIKHOAN VARCHAR(75) null,TENNGUOIDUNG VARCHAR(75) null,TINHTRANGHOATDONG VARCHAR(75) null,DIENTHOAI VARCHAR(75) null,NGAYTAOTAIKHOAN DATE null,NGAYMOTAIKHOAN DATE null)";
	public static final String TABLE_SQL_DROP = "drop table dn_nguoilamthutuc_user";
	public static final String ORDER_BY_JPQL = " ORDER BY dnDoanhNghiepUser.id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY dn_nguoilamthutuc_user.id ASC";
	public static final String DATA_SOURCE = "tthcDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.dtt.duongbo.dao.doanhnghiep.model.DnDoanhNghiepUser"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.dtt.duongbo.dao.doanhnghiep.model.DnDoanhNghiepUser"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.vn.dtt.duongbo.dao.doanhnghiep.model.DnDoanhNghiepUser"),
			true);
	public static long NGUOILAMTHUTUCID_COLUMN_BITMASK = 1L;
	public static long USERID_COLUMN_BITMASK = 2L;
	public static long ID_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.vn.dtt.duongbo.dao.doanhnghiep.model.DnDoanhNghiepUser"));

	public DnDoanhNghiepUserModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return DnDoanhNghiepUser.class;
	}

	@Override
	public String getModelClassName() {
		return DnDoanhNghiepUser.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("nguoiLamThuTucId", getNguoiLamThuTucId());
		attributes.put("userId", getUserId());
		attributes.put("toChucQuanLy", getToChucQuanLy());
		attributes.put("master", getMaster());
		attributes.put("tenTaiKhoan", getTenTaiKhoan());
		attributes.put("tenNguoiDung", getTenNguoiDung());
		attributes.put("tinhTrangHoatDong", getTinhTrangHoatDong());
		attributes.put("dienThoai", getDienThoai());
		attributes.put("ngayTaoTaiKhoan", getNgayTaoTaiKhoan());
		attributes.put("ngayMoTaiKhoan", getNgayMoTaiKhoan());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		Long nguoiLamThuTucId = (Long)attributes.get("nguoiLamThuTucId");

		if (nguoiLamThuTucId != null) {
			setNguoiLamThuTucId(nguoiLamThuTucId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String toChucQuanLy = (String)attributes.get("toChucQuanLy");

		if (toChucQuanLy != null) {
			setToChucQuanLy(toChucQuanLy);
		}

		String master = (String)attributes.get("master");

		if (master != null) {
			setMaster(master);
		}

		String tenTaiKhoan = (String)attributes.get("tenTaiKhoan");

		if (tenTaiKhoan != null) {
			setTenTaiKhoan(tenTaiKhoan);
		}

		String tenNguoiDung = (String)attributes.get("tenNguoiDung");

		if (tenNguoiDung != null) {
			setTenNguoiDung(tenNguoiDung);
		}

		String tinhTrangHoatDong = (String)attributes.get("tinhTrangHoatDong");

		if (tinhTrangHoatDong != null) {
			setTinhTrangHoatDong(tinhTrangHoatDong);
		}

		String dienThoai = (String)attributes.get("dienThoai");

		if (dienThoai != null) {
			setDienThoai(dienThoai);
		}

		Date ngayTaoTaiKhoan = (Date)attributes.get("ngayTaoTaiKhoan");

		if (ngayTaoTaiKhoan != null) {
			setNgayTaoTaiKhoan(ngayTaoTaiKhoan);
		}

		Date ngayMoTaiKhoan = (Date)attributes.get("ngayMoTaiKhoan");

		if (ngayMoTaiKhoan != null) {
			setNgayMoTaiKhoan(ngayMoTaiKhoan);
		}
	}

	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_columnBitmask = -1L;

		_id = id;
	}

	@Override
	public long getNguoiLamThuTucId() {
		return _nguoiLamThuTucId;
	}

	@Override
	public void setNguoiLamThuTucId(long nguoiLamThuTucId) {
		_columnBitmask |= NGUOILAMTHUTUCID_COLUMN_BITMASK;

		if (!_setOriginalNguoiLamThuTucId) {
			_setOriginalNguoiLamThuTucId = true;

			_originalNguoiLamThuTucId = _nguoiLamThuTucId;
		}

		_nguoiLamThuTucId = nguoiLamThuTucId;
	}

	public long getOriginalNguoiLamThuTucId() {
		return _originalNguoiLamThuTucId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@Override
	public String getToChucQuanLy() {
		if (_toChucQuanLy == null) {
			return StringPool.BLANK;
		}
		else {
			return _toChucQuanLy;
		}
	}

	@Override
	public void setToChucQuanLy(String toChucQuanLy) {
		_toChucQuanLy = toChucQuanLy;
	}

	@Override
	public String getMaster() {
		if (_master == null) {
			return StringPool.BLANK;
		}
		else {
			return _master;
		}
	}

	@Override
	public void setMaster(String master) {
		_master = master;
	}

	@Override
	public String getTenTaiKhoan() {
		if (_tenTaiKhoan == null) {
			return StringPool.BLANK;
		}
		else {
			return _tenTaiKhoan;
		}
	}

	@Override
	public void setTenTaiKhoan(String tenTaiKhoan) {
		_tenTaiKhoan = tenTaiKhoan;
	}

	@Override
	public String getTenNguoiDung() {
		if (_tenNguoiDung == null) {
			return StringPool.BLANK;
		}
		else {
			return _tenNguoiDung;
		}
	}

	@Override
	public void setTenNguoiDung(String tenNguoiDung) {
		_tenNguoiDung = tenNguoiDung;
	}

	@Override
	public String getTinhTrangHoatDong() {
		if (_tinhTrangHoatDong == null) {
			return StringPool.BLANK;
		}
		else {
			return _tinhTrangHoatDong;
		}
	}

	@Override
	public void setTinhTrangHoatDong(String tinhTrangHoatDong) {
		_tinhTrangHoatDong = tinhTrangHoatDong;
	}

	@Override
	public String getDienThoai() {
		if (_dienThoai == null) {
			return StringPool.BLANK;
		}
		else {
			return _dienThoai;
		}
	}

	@Override
	public void setDienThoai(String dienThoai) {
		_dienThoai = dienThoai;
	}

	@Override
	public Date getNgayTaoTaiKhoan() {
		return _ngayTaoTaiKhoan;
	}

	@Override
	public void setNgayTaoTaiKhoan(Date ngayTaoTaiKhoan) {
		_ngayTaoTaiKhoan = ngayTaoTaiKhoan;
	}

	@Override
	public Date getNgayMoTaiKhoan() {
		return _ngayMoTaiKhoan;
	}

	@Override
	public void setNgayMoTaiKhoan(Date ngayMoTaiKhoan) {
		_ngayMoTaiKhoan = ngayMoTaiKhoan;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			DnDoanhNghiepUser.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public DnDoanhNghiepUser toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (DnDoanhNghiepUser)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		DnDoanhNghiepUserImpl dnDoanhNghiepUserImpl = new DnDoanhNghiepUserImpl();

		dnDoanhNghiepUserImpl.setId(getId());
		dnDoanhNghiepUserImpl.setNguoiLamThuTucId(getNguoiLamThuTucId());
		dnDoanhNghiepUserImpl.setUserId(getUserId());
		dnDoanhNghiepUserImpl.setToChucQuanLy(getToChucQuanLy());
		dnDoanhNghiepUserImpl.setMaster(getMaster());
		dnDoanhNghiepUserImpl.setTenTaiKhoan(getTenTaiKhoan());
		dnDoanhNghiepUserImpl.setTenNguoiDung(getTenNguoiDung());
		dnDoanhNghiepUserImpl.setTinhTrangHoatDong(getTinhTrangHoatDong());
		dnDoanhNghiepUserImpl.setDienThoai(getDienThoai());
		dnDoanhNghiepUserImpl.setNgayTaoTaiKhoan(getNgayTaoTaiKhoan());
		dnDoanhNghiepUserImpl.setNgayMoTaiKhoan(getNgayMoTaiKhoan());

		dnDoanhNghiepUserImpl.resetOriginalValues();

		return dnDoanhNghiepUserImpl;
	}

	@Override
	public int compareTo(DnDoanhNghiepUser dnDoanhNghiepUser) {
		int value = 0;

		if (getId() < dnDoanhNghiepUser.getId()) {
			value = -1;
		}
		else if (getId() > dnDoanhNghiepUser.getId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof DnDoanhNghiepUser)) {
			return false;
		}

		DnDoanhNghiepUser dnDoanhNghiepUser = (DnDoanhNghiepUser)obj;

		long primaryKey = dnDoanhNghiepUser.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		DnDoanhNghiepUserModelImpl dnDoanhNghiepUserModelImpl = this;

		dnDoanhNghiepUserModelImpl._originalNguoiLamThuTucId = dnDoanhNghiepUserModelImpl._nguoiLamThuTucId;

		dnDoanhNghiepUserModelImpl._setOriginalNguoiLamThuTucId = false;

		dnDoanhNghiepUserModelImpl._originalUserId = dnDoanhNghiepUserModelImpl._userId;

		dnDoanhNghiepUserModelImpl._setOriginalUserId = false;

		dnDoanhNghiepUserModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<DnDoanhNghiepUser> toCacheModel() {
		DnDoanhNghiepUserCacheModel dnDoanhNghiepUserCacheModel = new DnDoanhNghiepUserCacheModel();

		dnDoanhNghiepUserCacheModel.id = getId();

		dnDoanhNghiepUserCacheModel.nguoiLamThuTucId = getNguoiLamThuTucId();

		dnDoanhNghiepUserCacheModel.userId = getUserId();

		dnDoanhNghiepUserCacheModel.toChucQuanLy = getToChucQuanLy();

		String toChucQuanLy = dnDoanhNghiepUserCacheModel.toChucQuanLy;

		if ((toChucQuanLy != null) && (toChucQuanLy.length() == 0)) {
			dnDoanhNghiepUserCacheModel.toChucQuanLy = null;
		}

		dnDoanhNghiepUserCacheModel.master = getMaster();

		String master = dnDoanhNghiepUserCacheModel.master;

		if ((master != null) && (master.length() == 0)) {
			dnDoanhNghiepUserCacheModel.master = null;
		}

		dnDoanhNghiepUserCacheModel.tenTaiKhoan = getTenTaiKhoan();

		String tenTaiKhoan = dnDoanhNghiepUserCacheModel.tenTaiKhoan;

		if ((tenTaiKhoan != null) && (tenTaiKhoan.length() == 0)) {
			dnDoanhNghiepUserCacheModel.tenTaiKhoan = null;
		}

		dnDoanhNghiepUserCacheModel.tenNguoiDung = getTenNguoiDung();

		String tenNguoiDung = dnDoanhNghiepUserCacheModel.tenNguoiDung;

		if ((tenNguoiDung != null) && (tenNguoiDung.length() == 0)) {
			dnDoanhNghiepUserCacheModel.tenNguoiDung = null;
		}

		dnDoanhNghiepUserCacheModel.tinhTrangHoatDong = getTinhTrangHoatDong();

		String tinhTrangHoatDong = dnDoanhNghiepUserCacheModel.tinhTrangHoatDong;

		if ((tinhTrangHoatDong != null) && (tinhTrangHoatDong.length() == 0)) {
			dnDoanhNghiepUserCacheModel.tinhTrangHoatDong = null;
		}

		dnDoanhNghiepUserCacheModel.dienThoai = getDienThoai();

		String dienThoai = dnDoanhNghiepUserCacheModel.dienThoai;

		if ((dienThoai != null) && (dienThoai.length() == 0)) {
			dnDoanhNghiepUserCacheModel.dienThoai = null;
		}

		Date ngayTaoTaiKhoan = getNgayTaoTaiKhoan();

		if (ngayTaoTaiKhoan != null) {
			dnDoanhNghiepUserCacheModel.ngayTaoTaiKhoan = ngayTaoTaiKhoan.getTime();
		}
		else {
			dnDoanhNghiepUserCacheModel.ngayTaoTaiKhoan = Long.MIN_VALUE;
		}

		Date ngayMoTaiKhoan = getNgayMoTaiKhoan();

		if (ngayMoTaiKhoan != null) {
			dnDoanhNghiepUserCacheModel.ngayMoTaiKhoan = ngayMoTaiKhoan.getTime();
		}
		else {
			dnDoanhNghiepUserCacheModel.ngayMoTaiKhoan = Long.MIN_VALUE;
		}

		return dnDoanhNghiepUserCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", nguoiLamThuTucId=");
		sb.append(getNguoiLamThuTucId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", toChucQuanLy=");
		sb.append(getToChucQuanLy());
		sb.append(", master=");
		sb.append(getMaster());
		sb.append(", tenTaiKhoan=");
		sb.append(getTenTaiKhoan());
		sb.append(", tenNguoiDung=");
		sb.append(getTenNguoiDung());
		sb.append(", tinhTrangHoatDong=");
		sb.append(getTinhTrangHoatDong());
		sb.append(", dienThoai=");
		sb.append(getDienThoai());
		sb.append(", ngayTaoTaiKhoan=");
		sb.append(getNgayTaoTaiKhoan());
		sb.append(", ngayMoTaiKhoan=");
		sb.append(getNgayMoTaiKhoan());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append("vn.dtt.duongbo.dao.doanhnghiep.model.DnDoanhNghiepUser");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nguoiLamThuTucId</column-name><column-value><![CDATA[");
		sb.append(getNguoiLamThuTucId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>toChucQuanLy</column-name><column-value><![CDATA[");
		sb.append(getToChucQuanLy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>master</column-name><column-value><![CDATA[");
		sb.append(getMaster());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tenTaiKhoan</column-name><column-value><![CDATA[");
		sb.append(getTenTaiKhoan());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tenNguoiDung</column-name><column-value><![CDATA[");
		sb.append(getTenNguoiDung());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tinhTrangHoatDong</column-name><column-value><![CDATA[");
		sb.append(getTinhTrangHoatDong());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dienThoai</column-name><column-value><![CDATA[");
		sb.append(getDienThoai());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ngayTaoTaiKhoan</column-name><column-value><![CDATA[");
		sb.append(getNgayTaoTaiKhoan());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ngayMoTaiKhoan</column-name><column-value><![CDATA[");
		sb.append(getNgayMoTaiKhoan());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = DnDoanhNghiepUser.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			DnDoanhNghiepUser.class
		};
	private long _id;
	private long _nguoiLamThuTucId;
	private long _originalNguoiLamThuTucId;
	private boolean _setOriginalNguoiLamThuTucId;
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private String _toChucQuanLy;
	private String _master;
	private String _tenTaiKhoan;
	private String _tenNguoiDung;
	private String _tinhTrangHoatDong;
	private String _dienThoai;
	private Date _ngayTaoTaiKhoan;
	private Date _ngayMoTaiKhoan;
	private long _columnBitmask;
	private DnDoanhNghiepUser _escapedModel;
}