/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dtt.duongbo.dao.nghiepvu.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import vn.dtt.duongbo.dao.nghiepvu.model.QlvtTTHCKetQuaThamTra;
import vn.dtt.duongbo.dao.nghiepvu.model.QlvtTTHCKetQuaThamTraModel;
import vn.dtt.duongbo.dao.nghiepvu.model.QlvtTTHCKetQuaThamTraSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the QlvtTTHCKetQuaThamTra service. Represents a row in the &quot;nghiepvu_tthc_ketquathamtra&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link vn.dtt.duongbo.dao.nghiepvu.model.QlvtTTHCKetQuaThamTraModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link QlvtTTHCKetQuaThamTraImpl}.
 * </p>
 *
 * @author NhanNc
 * @see QlvtTTHCKetQuaThamTraImpl
 * @see vn.dtt.duongbo.dao.nghiepvu.model.QlvtTTHCKetQuaThamTra
 * @see vn.dtt.duongbo.dao.nghiepvu.model.QlvtTTHCKetQuaThamTraModel
 * @generated
 */
@JSON(strict = true)
public class QlvtTTHCKetQuaThamTraModelImpl extends BaseModelImpl<QlvtTTHCKetQuaThamTra>
	implements QlvtTTHCKetQuaThamTraModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a qlvt t t h c ket qua tham tra model instance should use the {@link vn.dtt.duongbo.dao.nghiepvu.model.QlvtTTHCKetQuaThamTra} interface instead.
	 */
	public static final String TABLE_NAME = "nghiepvu_tthc_ketquathamtra";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id", Types.BIGINT },
			{ "MAKETQUATHAMTRA", Types.VARCHAR },
			{ "MATTHC", Types.VARCHAR },
			{ "BUOCXULY", Types.INTEGER },
			{ "TOCHUCXULY", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table nghiepvu_tthc_ketquathamtra (id LONG not null primary key,MAKETQUATHAMTRA VARCHAR(75) null,MATTHC VARCHAR(75) null,BUOCXULY INTEGER,TOCHUCXULY INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table nghiepvu_tthc_ketquathamtra";
	public static final String ORDER_BY_JPQL = " ORDER BY qlvtTTHCKetQuaThamTra.id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY nghiepvu_tthc_ketquathamtra.id ASC";
	public static final String DATA_SOURCE = "nghiepvuDataSource";
	public static final String SESSION_FACTORY = "nghiepvuSessionFactory";
	public static final String TX_MANAGER = "nghiepvuTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.dtt.duongbo.dao.nghiepvu.model.QlvtTTHCKetQuaThamTra"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.dtt.duongbo.dao.nghiepvu.model.QlvtTTHCKetQuaThamTra"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.vn.dtt.duongbo.dao.nghiepvu.model.QlvtTTHCKetQuaThamTra"),
			true);
	public static long BUOCXULY_COLUMN_BITMASK = 1L;
	public static long MATTHC_COLUMN_BITMASK = 2L;
	public static long TOCHUCXULY_COLUMN_BITMASK = 4L;
	public static long ID_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static QlvtTTHCKetQuaThamTra toModel(
		QlvtTTHCKetQuaThamTraSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		QlvtTTHCKetQuaThamTra model = new QlvtTTHCKetQuaThamTraImpl();

		model.setId(soapModel.getId());
		model.setMaKetQuaThamTra(soapModel.getMaKetQuaThamTra());
		model.setMaTTHC(soapModel.getMaTTHC());
		model.setBuocXuLy(soapModel.getBuocXuLy());
		model.setToChucXuLy(soapModel.getToChucXuLy());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<QlvtTTHCKetQuaThamTra> toModels(
		QlvtTTHCKetQuaThamTraSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<QlvtTTHCKetQuaThamTra> models = new ArrayList<QlvtTTHCKetQuaThamTra>(soapModels.length);

		for (QlvtTTHCKetQuaThamTraSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.vn.dtt.duongbo.dao.nghiepvu.model.QlvtTTHCKetQuaThamTra"));

	public QlvtTTHCKetQuaThamTraModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return QlvtTTHCKetQuaThamTra.class;
	}

	@Override
	public String getModelClassName() {
		return QlvtTTHCKetQuaThamTra.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("maKetQuaThamTra", getMaKetQuaThamTra());
		attributes.put("maTTHC", getMaTTHC());
		attributes.put("buocXuLy", getBuocXuLy());
		attributes.put("toChucXuLy", getToChucXuLy());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		String maKetQuaThamTra = (String)attributes.get("maKetQuaThamTra");

		if (maKetQuaThamTra != null) {
			setMaKetQuaThamTra(maKetQuaThamTra);
		}

		String maTTHC = (String)attributes.get("maTTHC");

		if (maTTHC != null) {
			setMaTTHC(maTTHC);
		}

		Integer buocXuLy = (Integer)attributes.get("buocXuLy");

		if (buocXuLy != null) {
			setBuocXuLy(buocXuLy);
		}

		Integer toChucXuLy = (Integer)attributes.get("toChucXuLy");

		if (toChucXuLy != null) {
			setToChucXuLy(toChucXuLy);
		}
	}

	@JSON
	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_columnBitmask = -1L;

		_id = id;
	}

	@JSON
	@Override
	public String getMaKetQuaThamTra() {
		if (_maKetQuaThamTra == null) {
			return StringPool.BLANK;
		}
		else {
			return _maKetQuaThamTra;
		}
	}

	@Override
	public void setMaKetQuaThamTra(String maKetQuaThamTra) {
		_maKetQuaThamTra = maKetQuaThamTra;
	}

	@JSON
	@Override
	public String getMaTTHC() {
		if (_maTTHC == null) {
			return StringPool.BLANK;
		}
		else {
			return _maTTHC;
		}
	}

	@Override
	public void setMaTTHC(String maTTHC) {
		_columnBitmask |= MATTHC_COLUMN_BITMASK;

		if (_originalMaTTHC == null) {
			_originalMaTTHC = _maTTHC;
		}

		_maTTHC = maTTHC;
	}

	public String getOriginalMaTTHC() {
		return GetterUtil.getString(_originalMaTTHC);
	}

	@JSON
	@Override
	public int getBuocXuLy() {
		return _buocXuLy;
	}

	@Override
	public void setBuocXuLy(int buocXuLy) {
		_columnBitmask |= BUOCXULY_COLUMN_BITMASK;

		if (!_setOriginalBuocXuLy) {
			_setOriginalBuocXuLy = true;

			_originalBuocXuLy = _buocXuLy;
		}

		_buocXuLy = buocXuLy;
	}

	public int getOriginalBuocXuLy() {
		return _originalBuocXuLy;
	}

	@JSON
	@Override
	public int getToChucXuLy() {
		return _toChucXuLy;
	}

	@Override
	public void setToChucXuLy(int toChucXuLy) {
		_columnBitmask |= TOCHUCXULY_COLUMN_BITMASK;

		if (!_setOriginalToChucXuLy) {
			_setOriginalToChucXuLy = true;

			_originalToChucXuLy = _toChucXuLy;
		}

		_toChucXuLy = toChucXuLy;
	}

	public int getOriginalToChucXuLy() {
		return _originalToChucXuLy;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			QlvtTTHCKetQuaThamTra.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public QlvtTTHCKetQuaThamTra toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (QlvtTTHCKetQuaThamTra)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		QlvtTTHCKetQuaThamTraImpl qlvtTTHCKetQuaThamTraImpl = new QlvtTTHCKetQuaThamTraImpl();

		qlvtTTHCKetQuaThamTraImpl.setId(getId());
		qlvtTTHCKetQuaThamTraImpl.setMaKetQuaThamTra(getMaKetQuaThamTra());
		qlvtTTHCKetQuaThamTraImpl.setMaTTHC(getMaTTHC());
		qlvtTTHCKetQuaThamTraImpl.setBuocXuLy(getBuocXuLy());
		qlvtTTHCKetQuaThamTraImpl.setToChucXuLy(getToChucXuLy());

		qlvtTTHCKetQuaThamTraImpl.resetOriginalValues();

		return qlvtTTHCKetQuaThamTraImpl;
	}

	@Override
	public int compareTo(QlvtTTHCKetQuaThamTra qlvtTTHCKetQuaThamTra) {
		int value = 0;

		if (getId() < qlvtTTHCKetQuaThamTra.getId()) {
			value = -1;
		}
		else if (getId() > qlvtTTHCKetQuaThamTra.getId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof QlvtTTHCKetQuaThamTra)) {
			return false;
		}

		QlvtTTHCKetQuaThamTra qlvtTTHCKetQuaThamTra = (QlvtTTHCKetQuaThamTra)obj;

		long primaryKey = qlvtTTHCKetQuaThamTra.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		QlvtTTHCKetQuaThamTraModelImpl qlvtTTHCKetQuaThamTraModelImpl = this;

		qlvtTTHCKetQuaThamTraModelImpl._originalMaTTHC = qlvtTTHCKetQuaThamTraModelImpl._maTTHC;

		qlvtTTHCKetQuaThamTraModelImpl._originalBuocXuLy = qlvtTTHCKetQuaThamTraModelImpl._buocXuLy;

		qlvtTTHCKetQuaThamTraModelImpl._setOriginalBuocXuLy = false;

		qlvtTTHCKetQuaThamTraModelImpl._originalToChucXuLy = qlvtTTHCKetQuaThamTraModelImpl._toChucXuLy;

		qlvtTTHCKetQuaThamTraModelImpl._setOriginalToChucXuLy = false;

		qlvtTTHCKetQuaThamTraModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<QlvtTTHCKetQuaThamTra> toCacheModel() {
		QlvtTTHCKetQuaThamTraCacheModel qlvtTTHCKetQuaThamTraCacheModel = new QlvtTTHCKetQuaThamTraCacheModel();

		qlvtTTHCKetQuaThamTraCacheModel.id = getId();

		qlvtTTHCKetQuaThamTraCacheModel.maKetQuaThamTra = getMaKetQuaThamTra();

		String maKetQuaThamTra = qlvtTTHCKetQuaThamTraCacheModel.maKetQuaThamTra;

		if ((maKetQuaThamTra != null) && (maKetQuaThamTra.length() == 0)) {
			qlvtTTHCKetQuaThamTraCacheModel.maKetQuaThamTra = null;
		}

		qlvtTTHCKetQuaThamTraCacheModel.maTTHC = getMaTTHC();

		String maTTHC = qlvtTTHCKetQuaThamTraCacheModel.maTTHC;

		if ((maTTHC != null) && (maTTHC.length() == 0)) {
			qlvtTTHCKetQuaThamTraCacheModel.maTTHC = null;
		}

		qlvtTTHCKetQuaThamTraCacheModel.buocXuLy = getBuocXuLy();

		qlvtTTHCKetQuaThamTraCacheModel.toChucXuLy = getToChucXuLy();

		return qlvtTTHCKetQuaThamTraCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(11);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", maKetQuaThamTra=");
		sb.append(getMaKetQuaThamTra());
		sb.append(", maTTHC=");
		sb.append(getMaTTHC());
		sb.append(", buocXuLy=");
		sb.append(getBuocXuLy());
		sb.append(", toChucXuLy=");
		sb.append(getToChucXuLy());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(19);

		sb.append("<model><model-name>");
		sb.append("vn.dtt.duongbo.dao.nghiepvu.model.QlvtTTHCKetQuaThamTra");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>maKetQuaThamTra</column-name><column-value><![CDATA[");
		sb.append(getMaKetQuaThamTra());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>maTTHC</column-name><column-value><![CDATA[");
		sb.append(getMaTTHC());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>buocXuLy</column-name><column-value><![CDATA[");
		sb.append(getBuocXuLy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>toChucXuLy</column-name><column-value><![CDATA[");
		sb.append(getToChucXuLy());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = QlvtTTHCKetQuaThamTra.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			QlvtTTHCKetQuaThamTra.class
		};
	private long _id;
	private String _maKetQuaThamTra;
	private String _maTTHC;
	private String _originalMaTTHC;
	private int _buocXuLy;
	private int _originalBuocXuLy;
	private boolean _setOriginalBuocXuLy;
	private int _toChucXuLy;
	private int _originalToChucXuLy;
	private boolean _setOriginalToChucXuLy;
	private long _columnBitmask;
	private QlvtTTHCKetQuaThamTra _escapedModel;
}