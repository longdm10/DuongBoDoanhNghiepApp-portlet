/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dtt.duongbo.dao.nghiepvu.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import vn.dtt.duongbo.dao.nghiepvu.model.QlvtYeuCauBoXung;
import vn.dtt.duongbo.dao.nghiepvu.model.QlvtYeuCauBoXungModel;
import vn.dtt.duongbo.dao.nghiepvu.model.QlvtYeuCauBoXungSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the QlvtYeuCauBoXung service. Represents a row in the &quot;nghiepvu_yeucaubosung&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link vn.dtt.duongbo.dao.nghiepvu.model.QlvtYeuCauBoXungModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link QlvtYeuCauBoXungImpl}.
 * </p>
 *
 * @author NhanNc
 * @see QlvtYeuCauBoXungImpl
 * @see vn.dtt.duongbo.dao.nghiepvu.model.QlvtYeuCauBoXung
 * @see vn.dtt.duongbo.dao.nghiepvu.model.QlvtYeuCauBoXungModel
 * @generated
 */
@JSON(strict = true)
public class QlvtYeuCauBoXungModelImpl extends BaseModelImpl<QlvtYeuCauBoXung>
	implements QlvtYeuCauBoXungModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a qlvt yeu cau bo xung model instance should use the {@link vn.dtt.duongbo.dao.nghiepvu.model.QlvtYeuCauBoXung} interface instead.
	 */
	public static final String TABLE_NAME = "nghiepvu_yeucaubosung";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id", Types.BIGINT },
			{ "NOIDUNG", Types.VARCHAR },
			{ "THONGTINXULYID", Types.INTEGER },
			{ "SOCONGVAN", Types.VARCHAR },
			{ "NGAYCONGVAN", Types.TIMESTAMP },
			{ "FILEID", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table nghiepvu_yeucaubosung (id LONG not null primary key,NOIDUNG VARCHAR(75) null,THONGTINXULYID INTEGER,SOCONGVAN VARCHAR(75) null,NGAYCONGVAN DATE null,FILEID INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table nghiepvu_yeucaubosung";
	public static final String ORDER_BY_JPQL = " ORDER BY qlvtYeuCauBoXung.id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY nghiepvu_yeucaubosung.id ASC";
	public static final String DATA_SOURCE = "nghiepvuDataSource";
	public static final String SESSION_FACTORY = "nghiepvuSessionFactory";
	public static final String TX_MANAGER = "nghiepvuTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.dtt.duongbo.dao.nghiepvu.model.QlvtYeuCauBoXung"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.dtt.duongbo.dao.nghiepvu.model.QlvtYeuCauBoXung"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static QlvtYeuCauBoXung toModel(QlvtYeuCauBoXungSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		QlvtYeuCauBoXung model = new QlvtYeuCauBoXungImpl();

		model.setId(soapModel.getId());
		model.setNoiDung(soapModel.getNoiDung());
		model.setThongTinXuLyId(soapModel.getThongTinXuLyId());
		model.setSoCongVan(soapModel.getSoCongVan());
		model.setNgayCongVan(soapModel.getNgayCongVan());
		model.setFileID(soapModel.getFileID());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<QlvtYeuCauBoXung> toModels(
		QlvtYeuCauBoXungSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<QlvtYeuCauBoXung> models = new ArrayList<QlvtYeuCauBoXung>(soapModels.length);

		for (QlvtYeuCauBoXungSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.vn.dtt.duongbo.dao.nghiepvu.model.QlvtYeuCauBoXung"));

	public QlvtYeuCauBoXungModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return QlvtYeuCauBoXung.class;
	}

	@Override
	public String getModelClassName() {
		return QlvtYeuCauBoXung.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("noiDung", getNoiDung());
		attributes.put("thongTinXuLyId", getThongTinXuLyId());
		attributes.put("soCongVan", getSoCongVan());
		attributes.put("ngayCongVan", getNgayCongVan());
		attributes.put("fileID", getFileID());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		String noiDung = (String)attributes.get("noiDung");

		if (noiDung != null) {
			setNoiDung(noiDung);
		}

		Integer thongTinXuLyId = (Integer)attributes.get("thongTinXuLyId");

		if (thongTinXuLyId != null) {
			setThongTinXuLyId(thongTinXuLyId);
		}

		String soCongVan = (String)attributes.get("soCongVan");

		if (soCongVan != null) {
			setSoCongVan(soCongVan);
		}

		Date ngayCongVan = (Date)attributes.get("ngayCongVan");

		if (ngayCongVan != null) {
			setNgayCongVan(ngayCongVan);
		}

		Integer fileID = (Integer)attributes.get("fileID");

		if (fileID != null) {
			setFileID(fileID);
		}
	}

	@JSON
	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_id = id;
	}

	@JSON
	@Override
	public String getNoiDung() {
		if (_noiDung == null) {
			return StringPool.BLANK;
		}
		else {
			return _noiDung;
		}
	}

	@Override
	public void setNoiDung(String noiDung) {
		_noiDung = noiDung;
	}

	@JSON
	@Override
	public int getThongTinXuLyId() {
		return _thongTinXuLyId;
	}

	@Override
	public void setThongTinXuLyId(int thongTinXuLyId) {
		_thongTinXuLyId = thongTinXuLyId;
	}

	@JSON
	@Override
	public String getSoCongVan() {
		if (_soCongVan == null) {
			return StringPool.BLANK;
		}
		else {
			return _soCongVan;
		}
	}

	@Override
	public void setSoCongVan(String soCongVan) {
		_soCongVan = soCongVan;
	}

	@JSON
	@Override
	public Date getNgayCongVan() {
		return _ngayCongVan;
	}

	@Override
	public void setNgayCongVan(Date ngayCongVan) {
		_ngayCongVan = ngayCongVan;
	}

	@JSON
	@Override
	public int getFileID() {
		return _fileID;
	}

	@Override
	public void setFileID(int fileID) {
		_fileID = fileID;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			QlvtYeuCauBoXung.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public QlvtYeuCauBoXung toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (QlvtYeuCauBoXung)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		QlvtYeuCauBoXungImpl qlvtYeuCauBoXungImpl = new QlvtYeuCauBoXungImpl();

		qlvtYeuCauBoXungImpl.setId(getId());
		qlvtYeuCauBoXungImpl.setNoiDung(getNoiDung());
		qlvtYeuCauBoXungImpl.setThongTinXuLyId(getThongTinXuLyId());
		qlvtYeuCauBoXungImpl.setSoCongVan(getSoCongVan());
		qlvtYeuCauBoXungImpl.setNgayCongVan(getNgayCongVan());
		qlvtYeuCauBoXungImpl.setFileID(getFileID());

		qlvtYeuCauBoXungImpl.resetOriginalValues();

		return qlvtYeuCauBoXungImpl;
	}

	@Override
	public int compareTo(QlvtYeuCauBoXung qlvtYeuCauBoXung) {
		int value = 0;

		if (getId() < qlvtYeuCauBoXung.getId()) {
			value = -1;
		}
		else if (getId() > qlvtYeuCauBoXung.getId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof QlvtYeuCauBoXung)) {
			return false;
		}

		QlvtYeuCauBoXung qlvtYeuCauBoXung = (QlvtYeuCauBoXung)obj;

		long primaryKey = qlvtYeuCauBoXung.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<QlvtYeuCauBoXung> toCacheModel() {
		QlvtYeuCauBoXungCacheModel qlvtYeuCauBoXungCacheModel = new QlvtYeuCauBoXungCacheModel();

		qlvtYeuCauBoXungCacheModel.id = getId();

		qlvtYeuCauBoXungCacheModel.noiDung = getNoiDung();

		String noiDung = qlvtYeuCauBoXungCacheModel.noiDung;

		if ((noiDung != null) && (noiDung.length() == 0)) {
			qlvtYeuCauBoXungCacheModel.noiDung = null;
		}

		qlvtYeuCauBoXungCacheModel.thongTinXuLyId = getThongTinXuLyId();

		qlvtYeuCauBoXungCacheModel.soCongVan = getSoCongVan();

		String soCongVan = qlvtYeuCauBoXungCacheModel.soCongVan;

		if ((soCongVan != null) && (soCongVan.length() == 0)) {
			qlvtYeuCauBoXungCacheModel.soCongVan = null;
		}

		Date ngayCongVan = getNgayCongVan();

		if (ngayCongVan != null) {
			qlvtYeuCauBoXungCacheModel.ngayCongVan = ngayCongVan.getTime();
		}
		else {
			qlvtYeuCauBoXungCacheModel.ngayCongVan = Long.MIN_VALUE;
		}

		qlvtYeuCauBoXungCacheModel.fileID = getFileID();

		return qlvtYeuCauBoXungCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(13);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", noiDung=");
		sb.append(getNoiDung());
		sb.append(", thongTinXuLyId=");
		sb.append(getThongTinXuLyId());
		sb.append(", soCongVan=");
		sb.append(getSoCongVan());
		sb.append(", ngayCongVan=");
		sb.append(getNgayCongVan());
		sb.append(", fileID=");
		sb.append(getFileID());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(22);

		sb.append("<model><model-name>");
		sb.append("vn.dtt.duongbo.dao.nghiepvu.model.QlvtYeuCauBoXung");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>noiDung</column-name><column-value><![CDATA[");
		sb.append(getNoiDung());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>thongTinXuLyId</column-name><column-value><![CDATA[");
		sb.append(getThongTinXuLyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>soCongVan</column-name><column-value><![CDATA[");
		sb.append(getSoCongVan());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ngayCongVan</column-name><column-value><![CDATA[");
		sb.append(getNgayCongVan());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fileID</column-name><column-value><![CDATA[");
		sb.append(getFileID());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = QlvtYeuCauBoXung.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			QlvtYeuCauBoXung.class
		};
	private long _id;
	private String _noiDung;
	private int _thongTinXuLyId;
	private String _soCongVan;
	private Date _ngayCongVan;
	private int _fileID;
	private QlvtYeuCauBoXung _escapedModel;
}