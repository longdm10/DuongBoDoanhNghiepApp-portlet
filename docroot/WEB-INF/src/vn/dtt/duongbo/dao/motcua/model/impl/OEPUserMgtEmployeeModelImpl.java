/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dtt.duongbo.dao.motcua.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import vn.dtt.duongbo.dao.motcua.model.OEPUserMgtEmployee;
import vn.dtt.duongbo.dao.motcua.model.OEPUserMgtEmployeeModel;
import vn.dtt.duongbo.dao.motcua.model.OEPUserMgtEmployeeSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the OEPUserMgtEmployee service. Represents a row in the &quot;oep_usermgt_employee&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link vn.dtt.duongbo.dao.motcua.model.OEPUserMgtEmployeeModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link OEPUserMgtEmployeeImpl}.
 * </p>
 *
 * @author win_64
 * @see OEPUserMgtEmployeeImpl
 * @see vn.dtt.duongbo.dao.motcua.model.OEPUserMgtEmployee
 * @see vn.dtt.duongbo.dao.motcua.model.OEPUserMgtEmployeeModel
 * @generated
 */
@JSON(strict = true)
public class OEPUserMgtEmployeeModelImpl extends BaseModelImpl<OEPUserMgtEmployee>
	implements OEPUserMgtEmployeeModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a o e p user mgt employee model instance should use the {@link vn.dtt.duongbo.dao.motcua.model.OEPUserMgtEmployee} interface instead.
	 */
	public static final String TABLE_NAME = "oep_usermgt_employee";
	public static final Object[][] TABLE_COLUMNS = {
			{ "employeeId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "mappingUserId", Types.BIGINT },
			{ "workingUnitId", Types.BIGINT },
			{ "mainJobPosId", Types.BIGINT },
			{ "employeeNo", Types.VARCHAR },
			{ "fullName", Types.VARCHAR },
			{ "officeTel", Types.VARCHAR },
			{ "homeTel", Types.VARCHAR },
			{ "mobile", Types.VARCHAR },
			{ "email", Types.VARCHAR },
			{ "typeOfEmployee", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table oep_usermgt_employee (employeeId LONG not null primary key,userId LONG,groupId LONG,companyId LONG,createDate DATE null,modifiedDate DATE null,mappingUserId LONG,workingUnitId LONG,mainJobPosId LONG,employeeNo VARCHAR(75) null,fullName VARCHAR(75) null,officeTel VARCHAR(75) null,homeTel VARCHAR(75) null,mobile VARCHAR(75) null,email VARCHAR(75) null,typeOfEmployee VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table oep_usermgt_employee";
	public static final String ORDER_BY_JPQL = " ORDER BY oepUserMgtEmployee.employeeId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY oep_usermgt_employee.employeeId ASC";
	public static final String DATA_SOURCE = "tthcDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.dtt.duongbo.dao.motcua.model.OEPUserMgtEmployee"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.dtt.duongbo.dao.motcua.model.OEPUserMgtEmployee"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.vn.dtt.duongbo.dao.motcua.model.OEPUserMgtEmployee"),
			true);
	public static long MAPPINGUSERID_COLUMN_BITMASK = 1L;
	public static long TYPEOFEMPLOYEE_COLUMN_BITMASK = 2L;
	public static long USERID_COLUMN_BITMASK = 4L;
	public static long WORKINGUNITID_COLUMN_BITMASK = 8L;
	public static long EMPLOYEEID_COLUMN_BITMASK = 16L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static OEPUserMgtEmployee toModel(OEPUserMgtEmployeeSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		OEPUserMgtEmployee model = new OEPUserMgtEmployeeImpl();

		model.setEmployeeId(soapModel.getEmployeeId());
		model.setUserId(soapModel.getUserId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setMappingUserId(soapModel.getMappingUserId());
		model.setWorkingUnitId(soapModel.getWorkingUnitId());
		model.setMainJobPosId(soapModel.getMainJobPosId());
		model.setEmployeeNo(soapModel.getEmployeeNo());
		model.setFullName(soapModel.getFullName());
		model.setOfficeTel(soapModel.getOfficeTel());
		model.setHomeTel(soapModel.getHomeTel());
		model.setMobile(soapModel.getMobile());
		model.setEmail(soapModel.getEmail());
		model.setTypeOfEmployee(soapModel.getTypeOfEmployee());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<OEPUserMgtEmployee> toModels(
		OEPUserMgtEmployeeSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<OEPUserMgtEmployee> models = new ArrayList<OEPUserMgtEmployee>(soapModels.length);

		for (OEPUserMgtEmployeeSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.vn.dtt.duongbo.dao.motcua.model.OEPUserMgtEmployee"));

	public OEPUserMgtEmployeeModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _employeeId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEmployeeId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _employeeId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return OEPUserMgtEmployee.class;
	}

	@Override
	public String getModelClassName() {
		return OEPUserMgtEmployee.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("employeeId", getEmployeeId());
		attributes.put("userId", getUserId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("mappingUserId", getMappingUserId());
		attributes.put("workingUnitId", getWorkingUnitId());
		attributes.put("mainJobPosId", getMainJobPosId());
		attributes.put("employeeNo", getEmployeeNo());
		attributes.put("fullName", getFullName());
		attributes.put("officeTel", getOfficeTel());
		attributes.put("homeTel", getHomeTel());
		attributes.put("mobile", getMobile());
		attributes.put("email", getEmail());
		attributes.put("typeOfEmployee", getTypeOfEmployee());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long employeeId = (Long)attributes.get("employeeId");

		if (employeeId != null) {
			setEmployeeId(employeeId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long mappingUserId = (Long)attributes.get("mappingUserId");

		if (mappingUserId != null) {
			setMappingUserId(mappingUserId);
		}

		Long workingUnitId = (Long)attributes.get("workingUnitId");

		if (workingUnitId != null) {
			setWorkingUnitId(workingUnitId);
		}

		Long mainJobPosId = (Long)attributes.get("mainJobPosId");

		if (mainJobPosId != null) {
			setMainJobPosId(mainJobPosId);
		}

		String employeeNo = (String)attributes.get("employeeNo");

		if (employeeNo != null) {
			setEmployeeNo(employeeNo);
		}

		String fullName = (String)attributes.get("fullName");

		if (fullName != null) {
			setFullName(fullName);
		}

		String officeTel = (String)attributes.get("officeTel");

		if (officeTel != null) {
			setOfficeTel(officeTel);
		}

		String homeTel = (String)attributes.get("homeTel");

		if (homeTel != null) {
			setHomeTel(homeTel);
		}

		String mobile = (String)attributes.get("mobile");

		if (mobile != null) {
			setMobile(mobile);
		}

		String email = (String)attributes.get("email");

		if (email != null) {
			setEmail(email);
		}

		String typeOfEmployee = (String)attributes.get("typeOfEmployee");

		if (typeOfEmployee != null) {
			setTypeOfEmployee(typeOfEmployee);
		}
	}

	@JSON
	@Override
	public long getEmployeeId() {
		return _employeeId;
	}

	@Override
	public void setEmployeeId(long employeeId) {
		_employeeId = employeeId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getMappingUserId() {
		return _mappingUserId;
	}

	@Override
	public void setMappingUserId(long mappingUserId) {
		_columnBitmask |= MAPPINGUSERID_COLUMN_BITMASK;

		if (!_setOriginalMappingUserId) {
			_setOriginalMappingUserId = true;

			_originalMappingUserId = _mappingUserId;
		}

		_mappingUserId = mappingUserId;
	}

	@Override
	public String getMappingUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getMappingUserId(), "uuid",
			_mappingUserUuid);
	}

	@Override
	public void setMappingUserUuid(String mappingUserUuid) {
		_mappingUserUuid = mappingUserUuid;
	}

	public long getOriginalMappingUserId() {
		return _originalMappingUserId;
	}

	@JSON
	@Override
	public long getWorkingUnitId() {
		return _workingUnitId;
	}

	@Override
	public void setWorkingUnitId(long workingUnitId) {
		_columnBitmask |= WORKINGUNITID_COLUMN_BITMASK;

		if (!_setOriginalWorkingUnitId) {
			_setOriginalWorkingUnitId = true;

			_originalWorkingUnitId = _workingUnitId;
		}

		_workingUnitId = workingUnitId;
	}

	public long getOriginalWorkingUnitId() {
		return _originalWorkingUnitId;
	}

	@JSON
	@Override
	public long getMainJobPosId() {
		return _mainJobPosId;
	}

	@Override
	public void setMainJobPosId(long mainJobPosId) {
		_mainJobPosId = mainJobPosId;
	}

	@JSON
	@Override
	public String getEmployeeNo() {
		if (_employeeNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _employeeNo;
		}
	}

	@Override
	public void setEmployeeNo(String employeeNo) {
		_employeeNo = employeeNo;
	}

	@JSON
	@Override
	public String getFullName() {
		if (_fullName == null) {
			return StringPool.BLANK;
		}
		else {
			return _fullName;
		}
	}

	@Override
	public void setFullName(String fullName) {
		_fullName = fullName;
	}

	@JSON
	@Override
	public String getOfficeTel() {
		if (_officeTel == null) {
			return StringPool.BLANK;
		}
		else {
			return _officeTel;
		}
	}

	@Override
	public void setOfficeTel(String officeTel) {
		_officeTel = officeTel;
	}

	@JSON
	@Override
	public String getHomeTel() {
		if (_homeTel == null) {
			return StringPool.BLANK;
		}
		else {
			return _homeTel;
		}
	}

	@Override
	public void setHomeTel(String homeTel) {
		_homeTel = homeTel;
	}

	@JSON
	@Override
	public String getMobile() {
		if (_mobile == null) {
			return StringPool.BLANK;
		}
		else {
			return _mobile;
		}
	}

	@Override
	public void setMobile(String mobile) {
		_mobile = mobile;
	}

	@JSON
	@Override
	public String getEmail() {
		if (_email == null) {
			return StringPool.BLANK;
		}
		else {
			return _email;
		}
	}

	@Override
	public void setEmail(String email) {
		_email = email;
	}

	@JSON
	@Override
	public String getTypeOfEmployee() {
		if (_typeOfEmployee == null) {
			return StringPool.BLANK;
		}
		else {
			return _typeOfEmployee;
		}
	}

	@Override
	public void setTypeOfEmployee(String typeOfEmployee) {
		_columnBitmask |= TYPEOFEMPLOYEE_COLUMN_BITMASK;

		if (_originalTypeOfEmployee == null) {
			_originalTypeOfEmployee = _typeOfEmployee;
		}

		_typeOfEmployee = typeOfEmployee;
	}

	public String getOriginalTypeOfEmployee() {
		return GetterUtil.getString(_originalTypeOfEmployee);
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			OEPUserMgtEmployee.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public OEPUserMgtEmployee toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (OEPUserMgtEmployee)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		OEPUserMgtEmployeeImpl oepUserMgtEmployeeImpl = new OEPUserMgtEmployeeImpl();

		oepUserMgtEmployeeImpl.setEmployeeId(getEmployeeId());
		oepUserMgtEmployeeImpl.setUserId(getUserId());
		oepUserMgtEmployeeImpl.setGroupId(getGroupId());
		oepUserMgtEmployeeImpl.setCompanyId(getCompanyId());
		oepUserMgtEmployeeImpl.setCreateDate(getCreateDate());
		oepUserMgtEmployeeImpl.setModifiedDate(getModifiedDate());
		oepUserMgtEmployeeImpl.setMappingUserId(getMappingUserId());
		oepUserMgtEmployeeImpl.setWorkingUnitId(getWorkingUnitId());
		oepUserMgtEmployeeImpl.setMainJobPosId(getMainJobPosId());
		oepUserMgtEmployeeImpl.setEmployeeNo(getEmployeeNo());
		oepUserMgtEmployeeImpl.setFullName(getFullName());
		oepUserMgtEmployeeImpl.setOfficeTel(getOfficeTel());
		oepUserMgtEmployeeImpl.setHomeTel(getHomeTel());
		oepUserMgtEmployeeImpl.setMobile(getMobile());
		oepUserMgtEmployeeImpl.setEmail(getEmail());
		oepUserMgtEmployeeImpl.setTypeOfEmployee(getTypeOfEmployee());

		oepUserMgtEmployeeImpl.resetOriginalValues();

		return oepUserMgtEmployeeImpl;
	}

	@Override
	public int compareTo(OEPUserMgtEmployee oepUserMgtEmployee) {
		long primaryKey = oepUserMgtEmployee.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof OEPUserMgtEmployee)) {
			return false;
		}

		OEPUserMgtEmployee oepUserMgtEmployee = (OEPUserMgtEmployee)obj;

		long primaryKey = oepUserMgtEmployee.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		OEPUserMgtEmployeeModelImpl oepUserMgtEmployeeModelImpl = this;

		oepUserMgtEmployeeModelImpl._originalUserId = oepUserMgtEmployeeModelImpl._userId;

		oepUserMgtEmployeeModelImpl._setOriginalUserId = false;

		oepUserMgtEmployeeModelImpl._originalMappingUserId = oepUserMgtEmployeeModelImpl._mappingUserId;

		oepUserMgtEmployeeModelImpl._setOriginalMappingUserId = false;

		oepUserMgtEmployeeModelImpl._originalWorkingUnitId = oepUserMgtEmployeeModelImpl._workingUnitId;

		oepUserMgtEmployeeModelImpl._setOriginalWorkingUnitId = false;

		oepUserMgtEmployeeModelImpl._originalTypeOfEmployee = oepUserMgtEmployeeModelImpl._typeOfEmployee;

		oepUserMgtEmployeeModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<OEPUserMgtEmployee> toCacheModel() {
		OEPUserMgtEmployeeCacheModel oepUserMgtEmployeeCacheModel = new OEPUserMgtEmployeeCacheModel();

		oepUserMgtEmployeeCacheModel.employeeId = getEmployeeId();

		oepUserMgtEmployeeCacheModel.userId = getUserId();

		oepUserMgtEmployeeCacheModel.groupId = getGroupId();

		oepUserMgtEmployeeCacheModel.companyId = getCompanyId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			oepUserMgtEmployeeCacheModel.createDate = createDate.getTime();
		}
		else {
			oepUserMgtEmployeeCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			oepUserMgtEmployeeCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			oepUserMgtEmployeeCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		oepUserMgtEmployeeCacheModel.mappingUserId = getMappingUserId();

		oepUserMgtEmployeeCacheModel.workingUnitId = getWorkingUnitId();

		oepUserMgtEmployeeCacheModel.mainJobPosId = getMainJobPosId();

		oepUserMgtEmployeeCacheModel.employeeNo = getEmployeeNo();

		String employeeNo = oepUserMgtEmployeeCacheModel.employeeNo;

		if ((employeeNo != null) && (employeeNo.length() == 0)) {
			oepUserMgtEmployeeCacheModel.employeeNo = null;
		}

		oepUserMgtEmployeeCacheModel.fullName = getFullName();

		String fullName = oepUserMgtEmployeeCacheModel.fullName;

		if ((fullName != null) && (fullName.length() == 0)) {
			oepUserMgtEmployeeCacheModel.fullName = null;
		}

		oepUserMgtEmployeeCacheModel.officeTel = getOfficeTel();

		String officeTel = oepUserMgtEmployeeCacheModel.officeTel;

		if ((officeTel != null) && (officeTel.length() == 0)) {
			oepUserMgtEmployeeCacheModel.officeTel = null;
		}

		oepUserMgtEmployeeCacheModel.homeTel = getHomeTel();

		String homeTel = oepUserMgtEmployeeCacheModel.homeTel;

		if ((homeTel != null) && (homeTel.length() == 0)) {
			oepUserMgtEmployeeCacheModel.homeTel = null;
		}

		oepUserMgtEmployeeCacheModel.mobile = getMobile();

		String mobile = oepUserMgtEmployeeCacheModel.mobile;

		if ((mobile != null) && (mobile.length() == 0)) {
			oepUserMgtEmployeeCacheModel.mobile = null;
		}

		oepUserMgtEmployeeCacheModel.email = getEmail();

		String email = oepUserMgtEmployeeCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			oepUserMgtEmployeeCacheModel.email = null;
		}

		oepUserMgtEmployeeCacheModel.typeOfEmployee = getTypeOfEmployee();

		String typeOfEmployee = oepUserMgtEmployeeCacheModel.typeOfEmployee;

		if ((typeOfEmployee != null) && (typeOfEmployee.length() == 0)) {
			oepUserMgtEmployeeCacheModel.typeOfEmployee = null;
		}

		return oepUserMgtEmployeeCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(33);

		sb.append("{employeeId=");
		sb.append(getEmployeeId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", mappingUserId=");
		sb.append(getMappingUserId());
		sb.append(", workingUnitId=");
		sb.append(getWorkingUnitId());
		sb.append(", mainJobPosId=");
		sb.append(getMainJobPosId());
		sb.append(", employeeNo=");
		sb.append(getEmployeeNo());
		sb.append(", fullName=");
		sb.append(getFullName());
		sb.append(", officeTel=");
		sb.append(getOfficeTel());
		sb.append(", homeTel=");
		sb.append(getHomeTel());
		sb.append(", mobile=");
		sb.append(getMobile());
		sb.append(", email=");
		sb.append(getEmail());
		sb.append(", typeOfEmployee=");
		sb.append(getTypeOfEmployee());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(52);

		sb.append("<model><model-name>");
		sb.append("vn.dtt.duongbo.dao.motcua.model.OEPUserMgtEmployee");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>employeeId</column-name><column-value><![CDATA[");
		sb.append(getEmployeeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mappingUserId</column-name><column-value><![CDATA[");
		sb.append(getMappingUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>workingUnitId</column-name><column-value><![CDATA[");
		sb.append(getWorkingUnitId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mainJobPosId</column-name><column-value><![CDATA[");
		sb.append(getMainJobPosId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>employeeNo</column-name><column-value><![CDATA[");
		sb.append(getEmployeeNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fullName</column-name><column-value><![CDATA[");
		sb.append(getFullName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>officeTel</column-name><column-value><![CDATA[");
		sb.append(getOfficeTel());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>homeTel</column-name><column-value><![CDATA[");
		sb.append(getHomeTel());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mobile</column-name><column-value><![CDATA[");
		sb.append(getMobile());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>email</column-name><column-value><![CDATA[");
		sb.append(getEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>typeOfEmployee</column-name><column-value><![CDATA[");
		sb.append(getTypeOfEmployee());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = OEPUserMgtEmployee.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			OEPUserMgtEmployee.class
		};
	private long _employeeId;
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private long _groupId;
	private long _companyId;
	private Date _createDate;
	private Date _modifiedDate;
	private long _mappingUserId;
	private String _mappingUserUuid;
	private long _originalMappingUserId;
	private boolean _setOriginalMappingUserId;
	private long _workingUnitId;
	private long _originalWorkingUnitId;
	private boolean _setOriginalWorkingUnitId;
	private long _mainJobPosId;
	private String _employeeNo;
	private String _fullName;
	private String _officeTel;
	private String _homeTel;
	private String _mobile;
	private String _email;
	private String _typeOfEmployee;
	private String _originalTypeOfEmployee;
	private long _columnBitmask;
	private OEPUserMgtEmployee _escapedModel;
}