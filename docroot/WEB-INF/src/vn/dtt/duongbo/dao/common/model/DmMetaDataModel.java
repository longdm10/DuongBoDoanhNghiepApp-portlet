/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dtt.duongbo.dao.common.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the DmMetaData service. Represents a row in the &quot;dm_metadata&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link vn.dtt.duongbo.dao.common.model.impl.DmMetaDataModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link vn.dtt.duongbo.dao.common.model.impl.DmMetaDataImpl}.
 * </p>
 *
 * @author win_64
 * @see DmMetaData
 * @see vn.dtt.duongbo.dao.common.model.impl.DmMetaDataImpl
 * @see vn.dtt.duongbo.dao.common.model.impl.DmMetaDataModelImpl
 * @generated
 */
public interface DmMetaDataModel extends BaseModel<DmMetaData> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a dm meta data model instance should use the {@link DmMetaData} interface instead.
	 */

	/**
	 * Returns the primary key of this dm meta data.
	 *
	 * @return the primary key of this dm meta data
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this dm meta data.
	 *
	 * @param primaryKey the primary key of this dm meta data
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this dm meta data.
	 *
	 * @return the ID of this dm meta data
	 */
	public long getId();

	/**
	 * Sets the ID of this dm meta data.
	 *
	 * @param id the ID of this dm meta data
	 */
	public void setId(long id);

	/**
	 * Returns the entity of this dm meta data.
	 *
	 * @return the entity of this dm meta data
	 */
	@AutoEscape
	public String getEntity();

	/**
	 * Sets the entity of this dm meta data.
	 *
	 * @param entity the entity of this dm meta data
	 */
	public void setEntity(String entity);

	/**
	 * Returns the field code of this dm meta data.
	 *
	 * @return the field code of this dm meta data
	 */
	@AutoEscape
	public String getFieldCode();

	/**
	 * Sets the field code of this dm meta data.
	 *
	 * @param fieldCode the field code of this dm meta data
	 */
	public void setFieldCode(String fieldCode);

	/**
	 * Returns the field name of this dm meta data.
	 *
	 * @return the field name of this dm meta data
	 */
	@AutoEscape
	public String getFieldName();

	/**
	 * Sets the field name of this dm meta data.
	 *
	 * @param fieldName the field name of this dm meta data
	 */
	public void setFieldName(String fieldName);

	/**
	 * Returns the field alter name of this dm meta data.
	 *
	 * @return the field alter name of this dm meta data
	 */
	@AutoEscape
	public String getFieldAlterName();

	/**
	 * Sets the field alter name of this dm meta data.
	 *
	 * @param fieldAlterName the field alter name of this dm meta data
	 */
	public void setFieldAlterName(String fieldAlterName);

	/**
	 * Returns the field description of this dm meta data.
	 *
	 * @return the field description of this dm meta data
	 */
	@AutoEscape
	public String getFieldDescription();

	/**
	 * Sets the field description of this dm meta data.
	 *
	 * @param fieldDescription the field description of this dm meta data
	 */
	public void setFieldDescription(String fieldDescription);

	/**
	 * Returns the field data set of this dm meta data.
	 *
	 * @return the field data set of this dm meta data
	 */
	@AutoEscape
	public String getFieldDataSet();

	/**
	 * Sets the field data set of this dm meta data.
	 *
	 * @param fieldDataSet the field data set of this dm meta data
	 */
	public void setFieldDataSet(String fieldDataSet);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(DmMetaData dmMetaData);

	@Override
	public int hashCode();

	@Override
	public CacheModel<DmMetaData> toCacheModel();

	@Override
	public DmMetaData toEscapedModel();

	@Override
	public DmMetaData toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}