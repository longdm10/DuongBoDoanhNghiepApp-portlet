/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dtt.duongbo.dao.common.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import vn.dtt.duongbo.dao.common.model.TthcThongBaoXuLy;
import vn.dtt.duongbo.dao.common.model.TthcThongBaoXuLyModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the TthcThongBaoXuLy service. Represents a row in the &quot;tthc_thongbaoxuly&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link vn.dtt.duongbo.dao.common.model.TthcThongBaoXuLyModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TthcThongBaoXuLyImpl}.
 * </p>
 *
 * @author win_64
 * @see TthcThongBaoXuLyImpl
 * @see vn.dtt.duongbo.dao.common.model.TthcThongBaoXuLy
 * @see vn.dtt.duongbo.dao.common.model.TthcThongBaoXuLyModel
 * @generated
 */
public class TthcThongBaoXuLyModelImpl extends BaseModelImpl<TthcThongBaoXuLy>
	implements TthcThongBaoXuLyModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a tthc thong bao xu ly model instance should use the {@link vn.dtt.duongbo.dao.common.model.TthcThongBaoXuLy} interface instead.
	 */
	public static final String TABLE_NAME = "tthc_thongbaoxuly";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id", Types.BIGINT },
			{ "hoSoThuTucId", Types.BIGINT },
			{ "mathongbao", Types.VARCHAR },
			{ "noidungthongbao", Types.VARCHAR },
			{ "duLieuThongBao", Types.VARCHAR },
			{ "ngaygio", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table tthc_thongbaoxuly (id LONG not null primary key,hoSoThuTucId LONG,mathongbao VARCHAR(75) null,noidungthongbao VARCHAR(75) null,duLieuThongBao VARCHAR(75) null,ngaygio DATE null)";
	public static final String TABLE_SQL_DROP = "drop table tthc_thongbaoxuly";
	public static final String ORDER_BY_JPQL = " ORDER BY tthcThongBaoXuLy.id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY tthc_thongbaoxuly.id ASC";
	public static final String DATA_SOURCE = "tthcDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.dtt.duongbo.dao.common.model.TthcThongBaoXuLy"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.dtt.duongbo.dao.common.model.TthcThongBaoXuLy"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.vn.dtt.duongbo.dao.common.model.TthcThongBaoXuLy"),
			true);
	public static long HOSOTHUTUCID_COLUMN_BITMASK = 1L;
	public static long ID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.vn.dtt.duongbo.dao.common.model.TthcThongBaoXuLy"));

	public TthcThongBaoXuLyModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return TthcThongBaoXuLy.class;
	}

	@Override
	public String getModelClassName() {
		return TthcThongBaoXuLy.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("hoSoThuTucId", getHoSoThuTucId());
		attributes.put("maThongBao", getMaThongBao());
		attributes.put("noiDungThongBao", getNoiDungThongBao());
		attributes.put("duLieuThongBao", getDuLieuThongBao());
		attributes.put("ngayGio", getNgayGio());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		Long hoSoThuTucId = (Long)attributes.get("hoSoThuTucId");

		if (hoSoThuTucId != null) {
			setHoSoThuTucId(hoSoThuTucId);
		}

		String maThongBao = (String)attributes.get("maThongBao");

		if (maThongBao != null) {
			setMaThongBao(maThongBao);
		}

		String noiDungThongBao = (String)attributes.get("noiDungThongBao");

		if (noiDungThongBao != null) {
			setNoiDungThongBao(noiDungThongBao);
		}

		String duLieuThongBao = (String)attributes.get("duLieuThongBao");

		if (duLieuThongBao != null) {
			setDuLieuThongBao(duLieuThongBao);
		}

		Date ngayGio = (Date)attributes.get("ngayGio");

		if (ngayGio != null) {
			setNgayGio(ngayGio);
		}
	}

	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_columnBitmask = -1L;

		_id = id;
	}

	@Override
	public long getHoSoThuTucId() {
		return _hoSoThuTucId;
	}

	@Override
	public void setHoSoThuTucId(long hoSoThuTucId) {
		_columnBitmask |= HOSOTHUTUCID_COLUMN_BITMASK;

		if (!_setOriginalHoSoThuTucId) {
			_setOriginalHoSoThuTucId = true;

			_originalHoSoThuTucId = _hoSoThuTucId;
		}

		_hoSoThuTucId = hoSoThuTucId;
	}

	public long getOriginalHoSoThuTucId() {
		return _originalHoSoThuTucId;
	}

	@Override
	public String getMaThongBao() {
		if (_maThongBao == null) {
			return StringPool.BLANK;
		}
		else {
			return _maThongBao;
		}
	}

	@Override
	public void setMaThongBao(String maThongBao) {
		_maThongBao = maThongBao;
	}

	@Override
	public String getNoiDungThongBao() {
		if (_noiDungThongBao == null) {
			return StringPool.BLANK;
		}
		else {
			return _noiDungThongBao;
		}
	}

	@Override
	public void setNoiDungThongBao(String noiDungThongBao) {
		_noiDungThongBao = noiDungThongBao;
	}

	@Override
	public String getDuLieuThongBao() {
		if (_duLieuThongBao == null) {
			return StringPool.BLANK;
		}
		else {
			return _duLieuThongBao;
		}
	}

	@Override
	public void setDuLieuThongBao(String duLieuThongBao) {
		_duLieuThongBao = duLieuThongBao;
	}

	@Override
	public Date getNgayGio() {
		return _ngayGio;
	}

	@Override
	public void setNgayGio(Date ngayGio) {
		_ngayGio = ngayGio;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			TthcThongBaoXuLy.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public TthcThongBaoXuLy toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (TthcThongBaoXuLy)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		TthcThongBaoXuLyImpl tthcThongBaoXuLyImpl = new TthcThongBaoXuLyImpl();

		tthcThongBaoXuLyImpl.setId(getId());
		tthcThongBaoXuLyImpl.setHoSoThuTucId(getHoSoThuTucId());
		tthcThongBaoXuLyImpl.setMaThongBao(getMaThongBao());
		tthcThongBaoXuLyImpl.setNoiDungThongBao(getNoiDungThongBao());
		tthcThongBaoXuLyImpl.setDuLieuThongBao(getDuLieuThongBao());
		tthcThongBaoXuLyImpl.setNgayGio(getNgayGio());

		tthcThongBaoXuLyImpl.resetOriginalValues();

		return tthcThongBaoXuLyImpl;
	}

	@Override
	public int compareTo(TthcThongBaoXuLy tthcThongBaoXuLy) {
		int value = 0;

		if (getId() < tthcThongBaoXuLy.getId()) {
			value = -1;
		}
		else if (getId() > tthcThongBaoXuLy.getId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof TthcThongBaoXuLy)) {
			return false;
		}

		TthcThongBaoXuLy tthcThongBaoXuLy = (TthcThongBaoXuLy)obj;

		long primaryKey = tthcThongBaoXuLy.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		TthcThongBaoXuLyModelImpl tthcThongBaoXuLyModelImpl = this;

		tthcThongBaoXuLyModelImpl._originalHoSoThuTucId = tthcThongBaoXuLyModelImpl._hoSoThuTucId;

		tthcThongBaoXuLyModelImpl._setOriginalHoSoThuTucId = false;

		tthcThongBaoXuLyModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<TthcThongBaoXuLy> toCacheModel() {
		TthcThongBaoXuLyCacheModel tthcThongBaoXuLyCacheModel = new TthcThongBaoXuLyCacheModel();

		tthcThongBaoXuLyCacheModel.id = getId();

		tthcThongBaoXuLyCacheModel.hoSoThuTucId = getHoSoThuTucId();

		tthcThongBaoXuLyCacheModel.maThongBao = getMaThongBao();

		String maThongBao = tthcThongBaoXuLyCacheModel.maThongBao;

		if ((maThongBao != null) && (maThongBao.length() == 0)) {
			tthcThongBaoXuLyCacheModel.maThongBao = null;
		}

		tthcThongBaoXuLyCacheModel.noiDungThongBao = getNoiDungThongBao();

		String noiDungThongBao = tthcThongBaoXuLyCacheModel.noiDungThongBao;

		if ((noiDungThongBao != null) && (noiDungThongBao.length() == 0)) {
			tthcThongBaoXuLyCacheModel.noiDungThongBao = null;
		}

		tthcThongBaoXuLyCacheModel.duLieuThongBao = getDuLieuThongBao();

		String duLieuThongBao = tthcThongBaoXuLyCacheModel.duLieuThongBao;

		if ((duLieuThongBao != null) && (duLieuThongBao.length() == 0)) {
			tthcThongBaoXuLyCacheModel.duLieuThongBao = null;
		}

		Date ngayGio = getNgayGio();

		if (ngayGio != null) {
			tthcThongBaoXuLyCacheModel.ngayGio = ngayGio.getTime();
		}
		else {
			tthcThongBaoXuLyCacheModel.ngayGio = Long.MIN_VALUE;
		}

		return tthcThongBaoXuLyCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(13);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", hoSoThuTucId=");
		sb.append(getHoSoThuTucId());
		sb.append(", maThongBao=");
		sb.append(getMaThongBao());
		sb.append(", noiDungThongBao=");
		sb.append(getNoiDungThongBao());
		sb.append(", duLieuThongBao=");
		sb.append(getDuLieuThongBao());
		sb.append(", ngayGio=");
		sb.append(getNgayGio());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(22);

		sb.append("<model><model-name>");
		sb.append("vn.dtt.duongbo.dao.common.model.TthcThongBaoXuLy");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>hoSoThuTucId</column-name><column-value><![CDATA[");
		sb.append(getHoSoThuTucId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>maThongBao</column-name><column-value><![CDATA[");
		sb.append(getMaThongBao());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>noiDungThongBao</column-name><column-value><![CDATA[");
		sb.append(getNoiDungThongBao());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>duLieuThongBao</column-name><column-value><![CDATA[");
		sb.append(getDuLieuThongBao());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ngayGio</column-name><column-value><![CDATA[");
		sb.append(getNgayGio());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = TthcThongBaoXuLy.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			TthcThongBaoXuLy.class
		};
	private long _id;
	private long _hoSoThuTucId;
	private long _originalHoSoThuTucId;
	private boolean _setOriginalHoSoThuTucId;
	private String _maThongBao;
	private String _noiDungThongBao;
	private String _duLieuThongBao;
	private Date _ngayGio;
	private long _columnBitmask;
	private TthcThongBaoXuLy _escapedModel;
}