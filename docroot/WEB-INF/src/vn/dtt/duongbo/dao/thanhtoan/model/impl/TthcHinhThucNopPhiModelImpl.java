/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dtt.duongbo.dao.thanhtoan.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import vn.dtt.duongbo.dao.thanhtoan.model.TthcHinhThucNopPhi;
import vn.dtt.duongbo.dao.thanhtoan.model.TthcHinhThucNopPhiModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the TthcHinhThucNopPhi service. Represents a row in the &quot;tthc_hinhthucnopphi&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link vn.dtt.duongbo.dao.thanhtoan.model.TthcHinhThucNopPhiModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TthcHinhThucNopPhiImpl}.
 * </p>
 *
 * @author win_64
 * @see TthcHinhThucNopPhiImpl
 * @see vn.dtt.duongbo.dao.thanhtoan.model.TthcHinhThucNopPhi
 * @see vn.dtt.duongbo.dao.thanhtoan.model.TthcHinhThucNopPhiModel
 * @generated
 */
public class TthcHinhThucNopPhiModelImpl extends BaseModelImpl<TthcHinhThucNopPhi>
	implements TthcHinhThucNopPhiModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a tthc hinh thuc nop phi model instance should use the {@link vn.dtt.duongbo.dao.thanhtoan.model.TthcHinhThucNopPhi} interface instead.
	 */
	public static final String TABLE_NAME = "tthc_hinhthucnopphi";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id", Types.BIGINT },
			{ "thutuchanhchinhid", Types.BIGINT },
			{ "donvithuchienid", Types.BIGINT },
			{ "phinopbandau", Types.BIGINT },
			{ "chuyenkhoan", Types.VARCHAR },
			{ "keypay", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table tthc_hinhthucnopphi (id LONG not null primary key,thutuchanhchinhid LONG,donvithuchienid LONG,phinopbandau LONG,chuyenkhoan VARCHAR(75) null,keypay VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table tthc_hinhthucnopphi";
	public static final String ORDER_BY_JPQL = " ORDER BY tthcHinhThucNopPhi.id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY tthc_hinhthucnopphi.id ASC";
	public static final String DATA_SOURCE = "tthcDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.dtt.duongbo.dao.thanhtoan.model.TthcHinhThucNopPhi"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.dtt.duongbo.dao.thanhtoan.model.TthcHinhThucNopPhi"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.vn.dtt.duongbo.dao.thanhtoan.model.TthcHinhThucNopPhi"),
			true);
	public static long THUTUCHANHCHINHID_COLUMN_BITMASK = 1L;
	public static long ID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.vn.dtt.duongbo.dao.thanhtoan.model.TthcHinhThucNopPhi"));

	public TthcHinhThucNopPhiModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return TthcHinhThucNopPhi.class;
	}

	@Override
	public String getModelClassName() {
		return TthcHinhThucNopPhi.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("thuTucHanhChinhId", getThuTucHanhChinhId());
		attributes.put("donViThucHienId", getDonViThucHienId());
		attributes.put("phiNopBanDau", getPhiNopBanDau());
		attributes.put("chuyenKhoan", getChuyenKhoan());
		attributes.put("keyPay", getKeyPay());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		Long thuTucHanhChinhId = (Long)attributes.get("thuTucHanhChinhId");

		if (thuTucHanhChinhId != null) {
			setThuTucHanhChinhId(thuTucHanhChinhId);
		}

		Long donViThucHienId = (Long)attributes.get("donViThucHienId");

		if (donViThucHienId != null) {
			setDonViThucHienId(donViThucHienId);
		}

		Long phiNopBanDau = (Long)attributes.get("phiNopBanDau");

		if (phiNopBanDau != null) {
			setPhiNopBanDau(phiNopBanDau);
		}

		String chuyenKhoan = (String)attributes.get("chuyenKhoan");

		if (chuyenKhoan != null) {
			setChuyenKhoan(chuyenKhoan);
		}

		String keyPay = (String)attributes.get("keyPay");

		if (keyPay != null) {
			setKeyPay(keyPay);
		}
	}

	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_columnBitmask = -1L;

		_id = id;
	}

	@Override
	public long getThuTucHanhChinhId() {
		return _thuTucHanhChinhId;
	}

	@Override
	public void setThuTucHanhChinhId(long thuTucHanhChinhId) {
		_columnBitmask |= THUTUCHANHCHINHID_COLUMN_BITMASK;

		if (!_setOriginalThuTucHanhChinhId) {
			_setOriginalThuTucHanhChinhId = true;

			_originalThuTucHanhChinhId = _thuTucHanhChinhId;
		}

		_thuTucHanhChinhId = thuTucHanhChinhId;
	}

	public long getOriginalThuTucHanhChinhId() {
		return _originalThuTucHanhChinhId;
	}

	@Override
	public long getDonViThucHienId() {
		return _donViThucHienId;
	}

	@Override
	public void setDonViThucHienId(long donViThucHienId) {
		_donViThucHienId = donViThucHienId;
	}

	@Override
	public long getPhiNopBanDau() {
		return _phiNopBanDau;
	}

	@Override
	public void setPhiNopBanDau(long phiNopBanDau) {
		_phiNopBanDau = phiNopBanDau;
	}

	@Override
	public String getChuyenKhoan() {
		if (_chuyenKhoan == null) {
			return StringPool.BLANK;
		}
		else {
			return _chuyenKhoan;
		}
	}

	@Override
	public void setChuyenKhoan(String chuyenKhoan) {
		_chuyenKhoan = chuyenKhoan;
	}

	@Override
	public String getKeyPay() {
		if (_keyPay == null) {
			return StringPool.BLANK;
		}
		else {
			return _keyPay;
		}
	}

	@Override
	public void setKeyPay(String keyPay) {
		_keyPay = keyPay;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			TthcHinhThucNopPhi.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public TthcHinhThucNopPhi toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (TthcHinhThucNopPhi)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		TthcHinhThucNopPhiImpl tthcHinhThucNopPhiImpl = new TthcHinhThucNopPhiImpl();

		tthcHinhThucNopPhiImpl.setId(getId());
		tthcHinhThucNopPhiImpl.setThuTucHanhChinhId(getThuTucHanhChinhId());
		tthcHinhThucNopPhiImpl.setDonViThucHienId(getDonViThucHienId());
		tthcHinhThucNopPhiImpl.setPhiNopBanDau(getPhiNopBanDau());
		tthcHinhThucNopPhiImpl.setChuyenKhoan(getChuyenKhoan());
		tthcHinhThucNopPhiImpl.setKeyPay(getKeyPay());

		tthcHinhThucNopPhiImpl.resetOriginalValues();

		return tthcHinhThucNopPhiImpl;
	}

	@Override
	public int compareTo(TthcHinhThucNopPhi tthcHinhThucNopPhi) {
		int value = 0;

		if (getId() < tthcHinhThucNopPhi.getId()) {
			value = -1;
		}
		else if (getId() > tthcHinhThucNopPhi.getId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof TthcHinhThucNopPhi)) {
			return false;
		}

		TthcHinhThucNopPhi tthcHinhThucNopPhi = (TthcHinhThucNopPhi)obj;

		long primaryKey = tthcHinhThucNopPhi.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		TthcHinhThucNopPhiModelImpl tthcHinhThucNopPhiModelImpl = this;

		tthcHinhThucNopPhiModelImpl._originalThuTucHanhChinhId = tthcHinhThucNopPhiModelImpl._thuTucHanhChinhId;

		tthcHinhThucNopPhiModelImpl._setOriginalThuTucHanhChinhId = false;

		tthcHinhThucNopPhiModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<TthcHinhThucNopPhi> toCacheModel() {
		TthcHinhThucNopPhiCacheModel tthcHinhThucNopPhiCacheModel = new TthcHinhThucNopPhiCacheModel();

		tthcHinhThucNopPhiCacheModel.id = getId();

		tthcHinhThucNopPhiCacheModel.thuTucHanhChinhId = getThuTucHanhChinhId();

		tthcHinhThucNopPhiCacheModel.donViThucHienId = getDonViThucHienId();

		tthcHinhThucNopPhiCacheModel.phiNopBanDau = getPhiNopBanDau();

		tthcHinhThucNopPhiCacheModel.chuyenKhoan = getChuyenKhoan();

		String chuyenKhoan = tthcHinhThucNopPhiCacheModel.chuyenKhoan;

		if ((chuyenKhoan != null) && (chuyenKhoan.length() == 0)) {
			tthcHinhThucNopPhiCacheModel.chuyenKhoan = null;
		}

		tthcHinhThucNopPhiCacheModel.keyPay = getKeyPay();

		String keyPay = tthcHinhThucNopPhiCacheModel.keyPay;

		if ((keyPay != null) && (keyPay.length() == 0)) {
			tthcHinhThucNopPhiCacheModel.keyPay = null;
		}

		return tthcHinhThucNopPhiCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(13);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", thuTucHanhChinhId=");
		sb.append(getThuTucHanhChinhId());
		sb.append(", donViThucHienId=");
		sb.append(getDonViThucHienId());
		sb.append(", phiNopBanDau=");
		sb.append(getPhiNopBanDau());
		sb.append(", chuyenKhoan=");
		sb.append(getChuyenKhoan());
		sb.append(", keyPay=");
		sb.append(getKeyPay());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(22);

		sb.append("<model><model-name>");
		sb.append("vn.dtt.duongbo.dao.thanhtoan.model.TthcHinhThucNopPhi");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>thuTucHanhChinhId</column-name><column-value><![CDATA[");
		sb.append(getThuTucHanhChinhId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>donViThucHienId</column-name><column-value><![CDATA[");
		sb.append(getDonViThucHienId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>phiNopBanDau</column-name><column-value><![CDATA[");
		sb.append(getPhiNopBanDau());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>chuyenKhoan</column-name><column-value><![CDATA[");
		sb.append(getChuyenKhoan());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>keyPay</column-name><column-value><![CDATA[");
		sb.append(getKeyPay());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = TthcHinhThucNopPhi.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			TthcHinhThucNopPhi.class
		};
	private long _id;
	private long _thuTucHanhChinhId;
	private long _originalThuTucHanhChinhId;
	private boolean _setOriginalThuTucHanhChinhId;
	private long _donViThucHienId;
	private long _phiNopBanDau;
	private String _chuyenKhoan;
	private String _keyPay;
	private long _columnBitmask;
	private TthcHinhThucNopPhi _escapedModel;
}