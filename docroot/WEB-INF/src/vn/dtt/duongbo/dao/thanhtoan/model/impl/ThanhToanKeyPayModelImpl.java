/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dtt.duongbo.dao.thanhtoan.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import vn.dtt.duongbo.dao.thanhtoan.model.ThanhToanKeyPay;
import vn.dtt.duongbo.dao.thanhtoan.model.ThanhToanKeyPayModel;
import vn.dtt.duongbo.dao.thanhtoan.service.persistence.ThanhToanKeyPayPK;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ThanhToanKeyPay service. Represents a row in the &quot;log_thanhtoankeypay&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link vn.dtt.duongbo.dao.thanhtoan.model.ThanhToanKeyPayModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ThanhToanKeyPayImpl}.
 * </p>
 *
 * @author win_64
 * @see ThanhToanKeyPayImpl
 * @see vn.dtt.duongbo.dao.thanhtoan.model.ThanhToanKeyPay
 * @see vn.dtt.duongbo.dao.thanhtoan.model.ThanhToanKeyPayModel
 * @generated
 */
public class ThanhToanKeyPayModelImpl extends BaseModelImpl<ThanhToanKeyPay>
	implements ThanhToanKeyPayModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a thanh toan key pay model instance should use the {@link vn.dtt.duongbo.dao.thanhtoan.model.ThanhToanKeyPay} interface instead.
	 */
	public static final String TABLE_NAME = "log_thanhtoankeypay";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id", Types.BIGINT },
			{ "iddoanhnghiep", Types.BIGINT },
			{ "goodcode", Types.VARCHAR },
			{ "amount", Types.BIGINT },
			{ "merchanttransid", Types.VARCHAR },
			{ "merchantcode", Types.VARCHAR },
			{ "responsecode", Types.VARCHAR },
			{ "transid_keypay", Types.BIGINT },
			{ "net_cost", Types.BIGINT },
			{ "ship_fee", Types.BIGINT },
			{ "currency_code", Types.VARCHAR },
			{ "bank_code", Types.VARCHAR },
			{ "xml_description", Types.VARCHAR },
			{ "ngayxuly", Types.TIMESTAMP },
			{ "thongtinhoso", Types.VARCHAR },
			{ "loaimessage", Types.BIGINT },
			{ "ipn", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table log_thanhtoankeypay (id LONG not null,iddoanhnghiep LONG not null,goodcode VARCHAR(75) null,amount LONG,merchanttransid VARCHAR(75) null,merchantcode VARCHAR(75) null,responsecode VARCHAR(75) null,transid_keypay LONG,net_cost LONG,ship_fee LONG,currency_code VARCHAR(75) null,bank_code VARCHAR(75) null,xml_description VARCHAR(75) null,ngayxuly DATE null,thongtinhoso VARCHAR(75) null,loaimessage LONG,ipn LONG,primary key (id, iddoanhnghiep))";
	public static final String TABLE_SQL_DROP = "drop table log_thanhtoankeypay";
	public static final String ORDER_BY_JPQL = " ORDER BY thanhToanKeyPay.id.id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY log_thanhtoankeypay.id ASC";
	public static final String DATA_SOURCE = "tthcDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.dtt.duongbo.dao.thanhtoan.model.ThanhToanKeyPay"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.dtt.duongbo.dao.thanhtoan.model.ThanhToanKeyPay"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.vn.dtt.duongbo.dao.thanhtoan.model.ThanhToanKeyPay"),
			true);
	public static long GOODCODE_COLUMN_BITMASK = 1L;
	public static long LOAIMESSAGE_COLUMN_BITMASK = 2L;
	public static long MERCHANTCODE_COLUMN_BITMASK = 4L;
	public static long MERCHANTTRANSID_COLUMN_BITMASK = 8L;
	public static long ID_COLUMN_BITMASK = 16L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.vn.dtt.duongbo.dao.thanhtoan.model.ThanhToanKeyPay"));

	public ThanhToanKeyPayModelImpl() {
	}

	@Override
	public ThanhToanKeyPayPK getPrimaryKey() {
		return new ThanhToanKeyPayPK(_id, _idDoanhNghiep);
	}

	@Override
	public void setPrimaryKey(ThanhToanKeyPayPK primaryKey) {
		setId(primaryKey.id);
		setIdDoanhNghiep(primaryKey.idDoanhNghiep);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new ThanhToanKeyPayPK(_id, _idDoanhNghiep);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((ThanhToanKeyPayPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return ThanhToanKeyPay.class;
	}

	@Override
	public String getModelClassName() {
		return ThanhToanKeyPay.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("idDoanhNghiep", getIdDoanhNghiep());
		attributes.put("goodCode", getGoodCode());
		attributes.put("amount", getAmount());
		attributes.put("merchantTransId", getMerchantTransId());
		attributes.put("merchantCode", getMerchantCode());
		attributes.put("responseCode", getResponseCode());
		attributes.put("transidKeypay", getTransidKeypay());
		attributes.put("netCost", getNetCost());
		attributes.put("shipFee", getShipFee());
		attributes.put("currencyCode", getCurrencyCode());
		attributes.put("bankCode", getBankCode());
		attributes.put("xmlDescription", getXmlDescription());
		attributes.put("ngayXuLy", getNgayXuLy());
		attributes.put("thongTinHoSo", getThongTinHoSo());
		attributes.put("loaiMessage", getLoaiMessage());
		attributes.put("ipn", getIpn());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		Long idDoanhNghiep = (Long)attributes.get("idDoanhNghiep");

		if (idDoanhNghiep != null) {
			setIdDoanhNghiep(idDoanhNghiep);
		}

		String goodCode = (String)attributes.get("goodCode");

		if (goodCode != null) {
			setGoodCode(goodCode);
		}

		Long amount = (Long)attributes.get("amount");

		if (amount != null) {
			setAmount(amount);
		}

		String merchantTransId = (String)attributes.get("merchantTransId");

		if (merchantTransId != null) {
			setMerchantTransId(merchantTransId);
		}

		String merchantCode = (String)attributes.get("merchantCode");

		if (merchantCode != null) {
			setMerchantCode(merchantCode);
		}

		String responseCode = (String)attributes.get("responseCode");

		if (responseCode != null) {
			setResponseCode(responseCode);
		}

		Long transidKeypay = (Long)attributes.get("transidKeypay");

		if (transidKeypay != null) {
			setTransidKeypay(transidKeypay);
		}

		Long netCost = (Long)attributes.get("netCost");

		if (netCost != null) {
			setNetCost(netCost);
		}

		Long shipFee = (Long)attributes.get("shipFee");

		if (shipFee != null) {
			setShipFee(shipFee);
		}

		String currencyCode = (String)attributes.get("currencyCode");

		if (currencyCode != null) {
			setCurrencyCode(currencyCode);
		}

		String bankCode = (String)attributes.get("bankCode");

		if (bankCode != null) {
			setBankCode(bankCode);
		}

		String xmlDescription = (String)attributes.get("xmlDescription");

		if (xmlDescription != null) {
			setXmlDescription(xmlDescription);
		}

		Date ngayXuLy = (Date)attributes.get("ngayXuLy");

		if (ngayXuLy != null) {
			setNgayXuLy(ngayXuLy);
		}

		String thongTinHoSo = (String)attributes.get("thongTinHoSo");

		if (thongTinHoSo != null) {
			setThongTinHoSo(thongTinHoSo);
		}

		Long loaiMessage = (Long)attributes.get("loaiMessage");

		if (loaiMessage != null) {
			setLoaiMessage(loaiMessage);
		}

		Long ipn = (Long)attributes.get("ipn");

		if (ipn != null) {
			setIpn(ipn);
		}
	}

	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_columnBitmask = -1L;

		_id = id;
	}

	@Override
	public long getIdDoanhNghiep() {
		return _idDoanhNghiep;
	}

	@Override
	public void setIdDoanhNghiep(long idDoanhNghiep) {
		_idDoanhNghiep = idDoanhNghiep;
	}

	@Override
	public String getGoodCode() {
		if (_goodCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _goodCode;
		}
	}

	@Override
	public void setGoodCode(String goodCode) {
		_columnBitmask |= GOODCODE_COLUMN_BITMASK;

		if (_originalGoodCode == null) {
			_originalGoodCode = _goodCode;
		}

		_goodCode = goodCode;
	}

	public String getOriginalGoodCode() {
		return GetterUtil.getString(_originalGoodCode);
	}

	@Override
	public long getAmount() {
		return _amount;
	}

	@Override
	public void setAmount(long amount) {
		_amount = amount;
	}

	@Override
	public String getMerchantTransId() {
		if (_merchantTransId == null) {
			return StringPool.BLANK;
		}
		else {
			return _merchantTransId;
		}
	}

	@Override
	public void setMerchantTransId(String merchantTransId) {
		_columnBitmask |= MERCHANTTRANSID_COLUMN_BITMASK;

		if (_originalMerchantTransId == null) {
			_originalMerchantTransId = _merchantTransId;
		}

		_merchantTransId = merchantTransId;
	}

	public String getOriginalMerchantTransId() {
		return GetterUtil.getString(_originalMerchantTransId);
	}

	@Override
	public String getMerchantCode() {
		if (_merchantCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _merchantCode;
		}
	}

	@Override
	public void setMerchantCode(String merchantCode) {
		_columnBitmask |= MERCHANTCODE_COLUMN_BITMASK;

		if (_originalMerchantCode == null) {
			_originalMerchantCode = _merchantCode;
		}

		_merchantCode = merchantCode;
	}

	public String getOriginalMerchantCode() {
		return GetterUtil.getString(_originalMerchantCode);
	}

	@Override
	public String getResponseCode() {
		if (_responseCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _responseCode;
		}
	}

	@Override
	public void setResponseCode(String responseCode) {
		_responseCode = responseCode;
	}

	@Override
	public long getTransidKeypay() {
		return _transidKeypay;
	}

	@Override
	public void setTransidKeypay(long transidKeypay) {
		_transidKeypay = transidKeypay;
	}

	@Override
	public long getNetCost() {
		return _netCost;
	}

	@Override
	public void setNetCost(long netCost) {
		_netCost = netCost;
	}

	@Override
	public long getShipFee() {
		return _shipFee;
	}

	@Override
	public void setShipFee(long shipFee) {
		_shipFee = shipFee;
	}

	@Override
	public String getCurrencyCode() {
		if (_currencyCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _currencyCode;
		}
	}

	@Override
	public void setCurrencyCode(String currencyCode) {
		_currencyCode = currencyCode;
	}

	@Override
	public String getBankCode() {
		if (_bankCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _bankCode;
		}
	}

	@Override
	public void setBankCode(String bankCode) {
		_bankCode = bankCode;
	}

	@Override
	public String getXmlDescription() {
		if (_xmlDescription == null) {
			return StringPool.BLANK;
		}
		else {
			return _xmlDescription;
		}
	}

	@Override
	public void setXmlDescription(String xmlDescription) {
		_xmlDescription = xmlDescription;
	}

	@Override
	public Date getNgayXuLy() {
		return _ngayXuLy;
	}

	@Override
	public void setNgayXuLy(Date ngayXuLy) {
		_ngayXuLy = ngayXuLy;
	}

	@Override
	public String getThongTinHoSo() {
		if (_thongTinHoSo == null) {
			return StringPool.BLANK;
		}
		else {
			return _thongTinHoSo;
		}
	}

	@Override
	public void setThongTinHoSo(String thongTinHoSo) {
		_thongTinHoSo = thongTinHoSo;
	}

	@Override
	public long getLoaiMessage() {
		return _loaiMessage;
	}

	@Override
	public void setLoaiMessage(long loaiMessage) {
		_columnBitmask |= LOAIMESSAGE_COLUMN_BITMASK;

		if (!_setOriginalLoaiMessage) {
			_setOriginalLoaiMessage = true;

			_originalLoaiMessage = _loaiMessage;
		}

		_loaiMessage = loaiMessage;
	}

	public long getOriginalLoaiMessage() {
		return _originalLoaiMessage;
	}

	@Override
	public long getIpn() {
		return _ipn;
	}

	@Override
	public void setIpn(long ipn) {
		_ipn = ipn;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ThanhToanKeyPay toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ThanhToanKeyPay)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ThanhToanKeyPayImpl thanhToanKeyPayImpl = new ThanhToanKeyPayImpl();

		thanhToanKeyPayImpl.setId(getId());
		thanhToanKeyPayImpl.setIdDoanhNghiep(getIdDoanhNghiep());
		thanhToanKeyPayImpl.setGoodCode(getGoodCode());
		thanhToanKeyPayImpl.setAmount(getAmount());
		thanhToanKeyPayImpl.setMerchantTransId(getMerchantTransId());
		thanhToanKeyPayImpl.setMerchantCode(getMerchantCode());
		thanhToanKeyPayImpl.setResponseCode(getResponseCode());
		thanhToanKeyPayImpl.setTransidKeypay(getTransidKeypay());
		thanhToanKeyPayImpl.setNetCost(getNetCost());
		thanhToanKeyPayImpl.setShipFee(getShipFee());
		thanhToanKeyPayImpl.setCurrencyCode(getCurrencyCode());
		thanhToanKeyPayImpl.setBankCode(getBankCode());
		thanhToanKeyPayImpl.setXmlDescription(getXmlDescription());
		thanhToanKeyPayImpl.setNgayXuLy(getNgayXuLy());
		thanhToanKeyPayImpl.setThongTinHoSo(getThongTinHoSo());
		thanhToanKeyPayImpl.setLoaiMessage(getLoaiMessage());
		thanhToanKeyPayImpl.setIpn(getIpn());

		thanhToanKeyPayImpl.resetOriginalValues();

		return thanhToanKeyPayImpl;
	}

	@Override
	public int compareTo(ThanhToanKeyPay thanhToanKeyPay) {
		int value = 0;

		if (getId() < thanhToanKeyPay.getId()) {
			value = -1;
		}
		else if (getId() > thanhToanKeyPay.getId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ThanhToanKeyPay)) {
			return false;
		}

		ThanhToanKeyPay thanhToanKeyPay = (ThanhToanKeyPay)obj;

		ThanhToanKeyPayPK primaryKey = thanhToanKeyPay.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
		ThanhToanKeyPayModelImpl thanhToanKeyPayModelImpl = this;

		thanhToanKeyPayModelImpl._originalGoodCode = thanhToanKeyPayModelImpl._goodCode;

		thanhToanKeyPayModelImpl._originalMerchantTransId = thanhToanKeyPayModelImpl._merchantTransId;

		thanhToanKeyPayModelImpl._originalMerchantCode = thanhToanKeyPayModelImpl._merchantCode;

		thanhToanKeyPayModelImpl._originalLoaiMessage = thanhToanKeyPayModelImpl._loaiMessage;

		thanhToanKeyPayModelImpl._setOriginalLoaiMessage = false;

		thanhToanKeyPayModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ThanhToanKeyPay> toCacheModel() {
		ThanhToanKeyPayCacheModel thanhToanKeyPayCacheModel = new ThanhToanKeyPayCacheModel();

		thanhToanKeyPayCacheModel.id = getId();

		thanhToanKeyPayCacheModel.idDoanhNghiep = getIdDoanhNghiep();

		thanhToanKeyPayCacheModel.goodCode = getGoodCode();

		String goodCode = thanhToanKeyPayCacheModel.goodCode;

		if ((goodCode != null) && (goodCode.length() == 0)) {
			thanhToanKeyPayCacheModel.goodCode = null;
		}

		thanhToanKeyPayCacheModel.amount = getAmount();

		thanhToanKeyPayCacheModel.merchantTransId = getMerchantTransId();

		String merchantTransId = thanhToanKeyPayCacheModel.merchantTransId;

		if ((merchantTransId != null) && (merchantTransId.length() == 0)) {
			thanhToanKeyPayCacheModel.merchantTransId = null;
		}

		thanhToanKeyPayCacheModel.merchantCode = getMerchantCode();

		String merchantCode = thanhToanKeyPayCacheModel.merchantCode;

		if ((merchantCode != null) && (merchantCode.length() == 0)) {
			thanhToanKeyPayCacheModel.merchantCode = null;
		}

		thanhToanKeyPayCacheModel.responseCode = getResponseCode();

		String responseCode = thanhToanKeyPayCacheModel.responseCode;

		if ((responseCode != null) && (responseCode.length() == 0)) {
			thanhToanKeyPayCacheModel.responseCode = null;
		}

		thanhToanKeyPayCacheModel.transidKeypay = getTransidKeypay();

		thanhToanKeyPayCacheModel.netCost = getNetCost();

		thanhToanKeyPayCacheModel.shipFee = getShipFee();

		thanhToanKeyPayCacheModel.currencyCode = getCurrencyCode();

		String currencyCode = thanhToanKeyPayCacheModel.currencyCode;

		if ((currencyCode != null) && (currencyCode.length() == 0)) {
			thanhToanKeyPayCacheModel.currencyCode = null;
		}

		thanhToanKeyPayCacheModel.bankCode = getBankCode();

		String bankCode = thanhToanKeyPayCacheModel.bankCode;

		if ((bankCode != null) && (bankCode.length() == 0)) {
			thanhToanKeyPayCacheModel.bankCode = null;
		}

		thanhToanKeyPayCacheModel.xmlDescription = getXmlDescription();

		String xmlDescription = thanhToanKeyPayCacheModel.xmlDescription;

		if ((xmlDescription != null) && (xmlDescription.length() == 0)) {
			thanhToanKeyPayCacheModel.xmlDescription = null;
		}

		Date ngayXuLy = getNgayXuLy();

		if (ngayXuLy != null) {
			thanhToanKeyPayCacheModel.ngayXuLy = ngayXuLy.getTime();
		}
		else {
			thanhToanKeyPayCacheModel.ngayXuLy = Long.MIN_VALUE;
		}

		thanhToanKeyPayCacheModel.thongTinHoSo = getThongTinHoSo();

		String thongTinHoSo = thanhToanKeyPayCacheModel.thongTinHoSo;

		if ((thongTinHoSo != null) && (thongTinHoSo.length() == 0)) {
			thanhToanKeyPayCacheModel.thongTinHoSo = null;
		}

		thanhToanKeyPayCacheModel.loaiMessage = getLoaiMessage();

		thanhToanKeyPayCacheModel.ipn = getIpn();

		return thanhToanKeyPayCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(35);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", idDoanhNghiep=");
		sb.append(getIdDoanhNghiep());
		sb.append(", goodCode=");
		sb.append(getGoodCode());
		sb.append(", amount=");
		sb.append(getAmount());
		sb.append(", merchantTransId=");
		sb.append(getMerchantTransId());
		sb.append(", merchantCode=");
		sb.append(getMerchantCode());
		sb.append(", responseCode=");
		sb.append(getResponseCode());
		sb.append(", transidKeypay=");
		sb.append(getTransidKeypay());
		sb.append(", netCost=");
		sb.append(getNetCost());
		sb.append(", shipFee=");
		sb.append(getShipFee());
		sb.append(", currencyCode=");
		sb.append(getCurrencyCode());
		sb.append(", bankCode=");
		sb.append(getBankCode());
		sb.append(", xmlDescription=");
		sb.append(getXmlDescription());
		sb.append(", ngayXuLy=");
		sb.append(getNgayXuLy());
		sb.append(", thongTinHoSo=");
		sb.append(getThongTinHoSo());
		sb.append(", loaiMessage=");
		sb.append(getLoaiMessage());
		sb.append(", ipn=");
		sb.append(getIpn());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(55);

		sb.append("<model><model-name>");
		sb.append("vn.dtt.duongbo.dao.thanhtoan.model.ThanhToanKeyPay");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>idDoanhNghiep</column-name><column-value><![CDATA[");
		sb.append(getIdDoanhNghiep());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>goodCode</column-name><column-value><![CDATA[");
		sb.append(getGoodCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>amount</column-name><column-value><![CDATA[");
		sb.append(getAmount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>merchantTransId</column-name><column-value><![CDATA[");
		sb.append(getMerchantTransId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>merchantCode</column-name><column-value><![CDATA[");
		sb.append(getMerchantCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>responseCode</column-name><column-value><![CDATA[");
		sb.append(getResponseCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>transidKeypay</column-name><column-value><![CDATA[");
		sb.append(getTransidKeypay());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>netCost</column-name><column-value><![CDATA[");
		sb.append(getNetCost());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>shipFee</column-name><column-value><![CDATA[");
		sb.append(getShipFee());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>currencyCode</column-name><column-value><![CDATA[");
		sb.append(getCurrencyCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>bankCode</column-name><column-value><![CDATA[");
		sb.append(getBankCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>xmlDescription</column-name><column-value><![CDATA[");
		sb.append(getXmlDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ngayXuLy</column-name><column-value><![CDATA[");
		sb.append(getNgayXuLy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>thongTinHoSo</column-name><column-value><![CDATA[");
		sb.append(getThongTinHoSo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>loaiMessage</column-name><column-value><![CDATA[");
		sb.append(getLoaiMessage());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ipn</column-name><column-value><![CDATA[");
		sb.append(getIpn());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ThanhToanKeyPay.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			ThanhToanKeyPay.class
		};
	private long _id;
	private long _idDoanhNghiep;
	private String _goodCode;
	private String _originalGoodCode;
	private long _amount;
	private String _merchantTransId;
	private String _originalMerchantTransId;
	private String _merchantCode;
	private String _originalMerchantCode;
	private String _responseCode;
	private long _transidKeypay;
	private long _netCost;
	private long _shipFee;
	private String _currencyCode;
	private String _bankCode;
	private String _xmlDescription;
	private Date _ngayXuLy;
	private String _thongTinHoSo;
	private long _loaiMessage;
	private long _originalLoaiMessage;
	private boolean _setOriginalLoaiMessage;
	private long _ipn;
	private long _columnBitmask;
	private ThanhToanKeyPay _escapedModel;
}